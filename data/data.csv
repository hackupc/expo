Submission Title,Submission Url,Plain Description,Video,Website,File Url,Desired Prizes,Built With,Mlh Points,Mlh Hardware Lab,Submitter Screen Name,Submitter First Name,Submitter Last Name,Submitter Email,College/Universities Of Team Members,Additional Team Member Count,Team Member 1 Screen Name,Team Member 1 First Name,Team Member 1 Last Name,Team Member 1 Email,...
HackSat,http://hackupc2017w.devpost.com/submissions/68745-hacksat,"What it does

HackSat consists of a prototype for a CubeSat blueprint which will allow anyone who wants to do any experimentation up in outer space to avoid worrying about how to send data or how to provide energy and start thinking about which data will be sent and when they will sent it.

It is also worth noticing that everything will be released under an Open Source License

How we built it

We designed the basic structure, based on the CubeSat specs provided by California Polytechnic State University and used by NASA to send low cost satellites.

We printed the structure by means of a couple 3d printers.

We handcrafted all electronics by using a combination of 3 Arduinos, which required us to search for low consuming components, in order to maximize the battery power, we also work on minimize the energy consumption for the whole satellite.

We opted to use recycled components, like solar panels, cables, battery, converter...

We worked a lot on the data transfer part, so it allows the Sat to be sleeping by the most part, on an effort to increase even more the battery life.

And almost 24hours of nonstop work and a lot of enthusiasm!!

Challenges we ran into

We find mostly challenging the electronics, because our main objective was to get the optimal energy out of our battery and avoid draining it too fast.

Another point worth mentioning was the data transfer between the experiment section and the Sat section, because we wanted to isolate each part as much as possible from the other, so the experiment just need to tell the Sat to send the data and nothing more.

Accomplishments that we are proud of

We are very proud to have accomplished the objective of making a viable prototype, even though we have faced some issues during these days, nonetheless we managed to overcome all of those issues and as a consequence we have grown wiser and our vision has become wider.

What we learned

During the development for HackSat, we have learned a lot about radio transmission, a huge lot about serial port and how to communicate data between 3 different micros, using 2 different protocols. 

What's next for HackSat

The first improvement that should be made is fix some issues we encountered with the measures of our designs, which have required some on site profiling.

Another obvious improvement is update the case so it is made of aluminium instead of plastic, which is the first blocking issue at the moment for HackSat to be launched.

Finally, we would change the hardware so it has more dedicated hardware which most likely will allow us to optimise even the battery consumption and global lifespan for the Sat.
",,https://github.com/jlcdev/HackSAT,,ShapeWays Challenge: Best 3D printing hack,"arduino, 3dprinting, c, virtual-wire, enthusiasm",Facultat de Informatica de Barcelona,"",Niles_XIII,Darío,Blasco,dario.blasco@est.fib.upc.edu,"",2,jlcdev,Javier,Lopez Calderon,potnox@gmail.com,Portal-P,Pau,Gallardo,pau.portalp@gmail.com
Assist Me,http://hackupc2017w.devpost.com/submissions/68776-assist-me,"AssistMe representa una aplicació autònoma que romandrà en marxa en segon pla a partir del moment en el qual l'usuari faci la instal·lació i configuració d'aquesta. La avantatge d'aquesta app es basa a poder accionar un mètode de emergència on és comunicarà amb el 112 únicament fent 1 click en la finestra de bloqueig del seu smartphone.

La idea neix per proporcionar al usuari que pateix un accident i necessita assistència sanitària una eina on pugui realitzar en els mínims moviments possibles una trucada al 112 i enviar la geolocalització d’on ha succeït l’accident mitjançant un SMS.
",,https://drive.google.com/open?id=0B69nv9jRlPnHT09ELUYyS1JHUzA,,Between Challenge:  SmartLocation to save lives,"google-drive, google-docs, pdf","Universitat Politecnica de Catalunya, Business School ESERP","",marcmauri,Marc,Mauri,marcmauri92@gmail.com,"",1,sergirodriguezmartinez,Sergi,Rodríguez Martinez,sergirodriguezmartinez@gmail.com
Whale Protection,http://hackupc2017w.devpost.com/submissions/68780-whale-protection,"Inspiration

We wanted to create an application that would help people suffering from depression to cope with their condition. 

What it does

The application analyses the posts user shares on Facebook and analyses the ""negativity"" of them. If it reaches a certain threshold, it is possible that the person considers harming themselves. The app triggers the8n a conversation with a person responsible for mental and spiritual support in a ""call-center"". The consultant has access to information about how can they help such users, and if necessary they can advise people to undertake professional medical treatment. This ""consultant"" can access the location of the person they are talking to in order to call for support if the condition of the user might be serious. The application of chat not only allows for anonymity

How I built it

Tomasz built the Android front end and the simple message analyzer with traditional Java and XML
Alex designed the web and mobile front-ends for our application. He also kept us busy finding bugs in our program :)
Max was the tech guru. He built the whole Python, .NET, and REST backend. And web front end of course

Challenges I ran into

Fetching posts from Facebook, connecting Android to our Python backend, parsing location to 

Accomplishments that I'm proud of

Learning REST for Android, working in a cool international team, coming up with a real-world-applicable hack :)

What I learned

Android: Notifications, XML shapes, GPS 
Web: favicons, PUSH notifications, REST integration

What's next for Whale Protection

Integration with Telegram or other messaging platform 
",https://youtu.be/Rsx-MDS6_O0,https://github.com/seriousbee/WhaleProtection,,"#HackHarassment, Between Challenge:  SmartLocation to save lives","android, rest, flask, ubuntu, sketch, photoshop, material-design","UCL, HSE (Moscow)","",seriousbee,Tomasz,Czernuszenko,tczernuszenko@gmail.com,"National Research University Higher School of Economics, National Reaserch University Higher School of Economics",2,diakov2100,Maksim,Diakov,dyakov-maksim2100@mail.ru,Pomidorosos,Alex,Naumov,adergar809@gmail.com
UPCoin,http://hackupc2017w.devpost.com/submissions/68782-upcoin,"Inspiration

Actually, several towns in Europe use a property coin for generate a community advantages. Barcelona is trying to implement a town currency.
This cases help us to transform UPC Campus in to a little town community for take the advantages of a  property political economy.

What it does

UPCoin creates an incentive to students for collaborating in UPC Campus and for the efforts of good marks. 

This UPCoin is a currency, controlled and regulated by UPC Government and of course is only available for UPC Students. 

With this coins, there are several services which can be applied such as:


Pay university fees
Buying products and assets from the stores located in the campus.
Join the fitness center for a limited time.
Increase printing quotas.
Book rooms.
Transfer coins with classmates for their help and support.
...


Supposition: 1 UPC Coin = 1 Euro, and it's backed by real money, that the UPC wants to invest in this purpose in order to increase demand and offer an innovative service for students.

How we built it

We used NEM blockchain, taking advantage of Nano Wallet as a base to implement the system.
https://github.com/NemProject/NanoWallet

Then, created the namespace UPC.
Once created the namespace, we have created the following assets:


upc:coin : asset to be sent as money
upc:validated : asset to set an account as valid [not transferable]
upc:denied: asset to set an account as invalid [not transferable]


We also have integrated Racó FIB login system using the new API, in order to guarantee the integration with the university services.

Benefits of using Blockchain


Security: Built on a secure blockchain environment, UPCoin uses NEM as the core of his platform, we have worked on the platform so is based on “security first”.
Control: UPC can give privileges to the users and send assets.
Social: Each user has the capacity to spend send their assets with others.
Scalable: Created to manage a high quantity of users without losing performance 
Efficiency: Platform is created in high availability for users to operate whenever they want.
Auditable: Users are able to review any transaction and registration in the NEM blockchain giving always veracity of operations.
Decentralized: Always available.


What we learned


NEM Blockchain
Mosaic
Assets


What's next for UPCoin

UPCoin it's one coin, but there are endless possibilities to use it.

UPC should do mature reflection to increase demand, control money and offer innovative services to their community, and choose in which way they want to allow UPCoin.
",https://www.youtube.com/watch?v=x3E9-z-sj0s,http://upcoin.tech/start.html,,"FIB API Challenge, Best .tech domain, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg, Amazon Web Services - Best Use of AWS","nem, blockchain, angular.js",Universitat Politècnica de Catalunya,"",dgarcia360,David,García Ruiz,davidgarcia.esp@gmail.com,"Universitat Politecnica de Catalunya, Universitat Oberta de Catalunya",1,aleix,Aleix,Morgadas,aleix@vicom.io
groovify,http://hackupc2017w.devpost.com/submissions/68783-groovify,"Inspiration

We realised our original project was out-of-scope.

What it does

It makes Facebook nice.

How we built it

StackOverflow.

Challenges we ran into

Chrome Extension documentation is garbage.

Accomplishments that we're proud of

We got the font working.

What we learned

Chrome extensions need better documentation.

What's next for groovify

Nothing really.
",,https://github.com/KingNoosh/groovify,,"",css,Goldsmiths,"",KingNoosh,Anosh,Malik,me@ano.sh,"",1,uve,Yuvesh,Tulsiani,yuv3sh@gmail.com
ChATURAT,http://hackupc2017w.devpost.com/submissions/68784-chaturat,"Inspiration

How can we create a safe environment for teenagers to enjoy their digital experience yet avoid releasing key aspects that can lead to harassment? As kids, we often had to learn online lessons the hard way. It would be great to have a system that can prevent this sort of incidents and create a place enjoyable for everyone

What it does

It identifies when a teenager/child is about to release personal data such as age, location or real name. Additionally, we use Google Natural Language API to ensure negative bullying messages are blocked.

How we built it

We took a bottom, mid & top approach. We built local host, trained the AI and could not deploy to online server

Challenges we ran into

DJANGO! 

Accomplishments that we're proud of

Shifting from Heroku to the awesome Scalingo features

What we learned

We should better combine our abilities next time

What's next for HarassmentControl

WE WILL MAKE DEPLOYMENT GREAT AGAIN WITH LOVE FROM RUSSIA.
",,https://github.com/jamjs98764/harrassment-upc.git,,"#HackHarassment, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","python, django, android, scalingo","Oxford, UPC, Aberdeen","",marccaps,Marc,Caps,marccaps@gmail.com,"",3,jamjs98764,Jian Hong,Lim,jianhong1995@hotmail.com,jcllobet,Jan,Carbonell,jcllobet@gmail.com,ndruzin,Nikolai,Drouzine,nikdrouzine@gmail.com
ReportEs,http://hackupc2017w.devpost.com/submissions/68785-reportes,"ReportEspaña

ReportEspaña is an iOS application that uses crowd-sourcing and geo-fencing to keep people safe in the event of a crisis.

How it works?

You can use ReportEspaña to identify danger areas and call for help.
",,https://github.com/Ripnrip/Reportes,,"Between Challenge:  SmartLocation to save lives, Best hack by Bloomberg","swift, ios, firebase",The College of William & Mary,"",NickRance,Nick,Rance,nicholas.rance@gmail.com,"",0
eink.news,http://hackupc2017w.devpost.com/submissions/68787-eink-news,"Inspiration

We take a 45 minute train every morning and read news sites and blogs like Hacker News. We really like the feeling of the ebook and we thought it would be awesome to combine the best of both worlds. We though making it modular and open source would be perfect because anyone can add their favourite sources and everyone can benefit from it.

What it does

You subscribe to the news and blogs you want and get a link that lets you download a curated ebook generated from this sources. The news we generate are super ebook friendly.

How we built it

We get the content from the original website frontpages, follow article links and parse them to an adapted version which we convert to either .epub or .mobi (for kindle). Every website/blog we support is a different parse module, and the app is built so that anyone can make new modules easily. The frontend is built in react Redux aiming to make the project as maintainable as possible. The styling follows material ui standards.

Challenges we ran into

Creating a modular backend and parseing websites to generate ebooks has taken most of the time and effort. 

One big complication is that front pages only show previews, so we have to follow links and parse each article individually, then make an index so that the ebook is readable. We've tried two different approaches for getting the relevant context, using regex and virtual DOM manipulation. We haven't tested which one is better yet.

We also had to learn how the epub format is structured, as well as the mobi.

Accomplishments that we're proud of


Setting up a fully operational modular open source app with CI that serves both static files on S3 and runs a docker container on amazon ec2 that hosts the api, all in a nice looking domain with SSL encryption.
Parseing websites to extract only relevant data. 
Being able to scape form callback hell by using promises. 


What we learned

In everyone of the accomplishments that we are proud of we had to learn something. Be it promises, DevOps, Regex or dom manipulation or ebook file structure.

What's next for eInkNews

We would really like to carry on working on this because we will use it for our day to day lifes. We hope someone else will find it useful too.
",,https://github.com/eink-news/eInkNews,,"Best hack by Bloomberg, Amazon Web Services - Best Use of AWS","react, redux, s3, docker, ec2, cloudfront",UPC,"",MrPolymath,Daniel,Carmona,danielcarmona55@gmail.com,"",2,ianmartorell,Ian,Martorell,ianmartorell@gmail.com,Hacalox,Héctor,Anadón,hanadonc@gmail.com
AmISafe,http://hackupc2017w.devpost.com/submissions/68789-amisafe,"Inspiration

Safety above everything!

What it does

Notifies the user whenever news appear according to specific tags previously provided

How I built it

Used JavaScript to render everything around the chrome extension

Challenges I ran into

Making extensions allow Jquery

Accomplishments that I'm proud of

Finally managed to master javascript

What I learned

How to use and implement different APIs

What's next for AmISafe
",,,,"EVERIS Challenge: Help people with AI, Between Challenge:  SmartLocation to save lives","javascript, jquery, maps, chrome",Birmingham city university,"",andreituta,Andrei,Tuta,tuta.andrei96@gmail.com,"",0
GIF Palette,http://hackupc2017w.devpost.com/submissions/68790-gif-palette,"Inspiration

//TODO

What it does

How I built it

Challenges I ran into

Accomplishments that I'm proud of

What I learned

What's next for Gif Palette
",,,,"Best .tech domain, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg, Amazon Web Services - Best Use of AWS","electron, node.js, amazon-web-services, s3, clarifai, algolia","Birmingham City University, City University of London, Aston University","",pandelis,Pandelis,Zembashis,info@pandelis.me,"",0
Car AI 2,http://hackupc2017w.devpost.com/submissions/68791-car-ai-2,"Car AI 2

AI Car AI

We have worked with a genetic algorithm which used neural networks in order to train a driving algorithm to get a car through a virtual circuit.
",https://youtu.be/byRkAcE8pg4,https://github.com/Kittus/CarAItu,,"EVERIS Challenge: Help people with AI, Best hack by Bloomberg","python, c#",Universitat Politècnica de Catalunya,"",a-canya,Arnau,Canyadell,arnau.canyadell@est.fib.upc.edu,UPC,2,Kittus,Marc,Asenjo,markasenjo@hotmail.com,ImInSpace,Iñigo,Moreno,ignigomoreno@gmail.com
Tensorflow Fun,http://hackupc2017w.devpost.com/submissions/68792-tensorflow-fun,"I was just playing around a bit with Tensorflow
",,https://github.com/L1am0/Tensorflow_Fun_HackUPC,,"","python, tensorflow",Technische Universität Berlin,"",L1am0,"","",online.frey@mailbox.org,"",0
1Sec,http://hackupc2017w.devpost.com/submissions/68793-1sec,"Inspiration

The idea is coming from The Chef movie. When you want to remember your trip, your events through out the year.

What it does

Takes a second long video everyday for a year. And combines the video anytime to watch it and share it with friends and family.

How we built it

iOS application.

Challenges we ran into

Working with videos and audio tracks on iOS. It's full of bugs.

Accomplishments that we're proud of

We got the the video merging feature working.

What we learned

iOS, Swift

What's next for 1Sec

Polish it and publish it in the App Store :)
",,https://github.com/imex94/1Second,,"","ios, swift, core-data","King's College London, University of Birmingham","",imex94,Alex,Telek,imex94@gmail.com,"",1,abeylann,Alicia,Beylan,alix_1995@live.com.mx
Crowd.io,http://hackupc2017w.devpost.com/submissions/68794-crowd-io,"Crowd.io

The main goal of this application is to provide immediate support for people who are in dangerous situations for which special services, such as the police or medical support, may not arrive in time. The app uses GPS to locate all nearby users, and web sockets to transmit live data about the state of the user base.

Each registered user is marked blue as a Supporter, that is someone who is able to show up and help other people in need. In case of emergency, users are able to trigger an Alert, turning their marker red and notifying nearby users about the situation.

When in an emergency, the users are able to answer simple Yes/No questions (are you injured/under attack, is there open access to your location) - these get transmitted to nearby Supporters who are better informed about the situation on their way.

The application allows marking skills that may be useful for providing support, such as first aid or lifeguard experience - this is taken into account when notifying nearby Supporters about a particular emergency. Likewise, users are also able to mark if they have physical or mental disabilities which could be a potential cause of the Alert.

Both the Supporters and the Alerted are able to call emergency services from the app if they are required. Otherwise, the Alerted user is able to mark their Emergency as resolved once one or more Supporters arrive at their location.
",,https://crowdie.scalingo.io/,,"Between Challenge:  SmartLocation to save lives, Scalingo Challenge: The coolest Hack Hosted on Scalingo","javascript, html, css, json, node.js",University of Glasgow,"",domantasjurkus,Domantas,Jurkus,domantas.jurkus@gmail.com,University of Glasgow,1,MalikBennabi,Malik,Bennabi,malbennabi@gmail.com
Chromelexa,http://hackupc2017w.devpost.com/submissions/68795-chromelexa,"Inspiration

We wanted to do something interesting with Alexa, so we decided to make a skill. We noticed that while you can use Alexa to stream movies and music to your TV, you can't control your computer's laptop with it. So we decided to make this system!

What it does

Using your Echo/other Alexa, load the skill and speak:
> Alexa, open browser navigator.
Welcome to browser navigator.
> Alexa, go back.
Going back.
> Alexa, load Facebook
Loading Facebook.
> Alexa, search for latest news
Loading Google search results.
> Alexa, biene?
Biene!

You get the drill. An extension installed on your Chrome browser performs the actions you give it.

How we built it

The system uses four main parts: An Alexa skill, an AWS Lambda function that handles the skill, a webserver, and a Chrome extension.

The Alexa skill simply allows the user to dictate commands, and the Lambda function processes these. The function then sends the command to the webserver (in a HTTP POST request). This webserver runs a Socket.io server, and when it receives a command from the Lambda function, it emits an event to the Chrome extension containing the command. The extension receives this event, processes the command, then runs it on the current browser tab.

Challenges we ran into


Lambda is a little slow to update DNS, so we couldn't see our webserver for a few hours.
Chrome doesn't have a lot of documentation for extensions...
None of us used Scalingo before, so took a little time to set up.


Accomplishments that we're proud of


It works!


What we learned


How to write Alexa skills
How to make Chrome extensions
How to use websockets effectively


What's next for Chromelexa


Multiple user support (using a signin system, or something like google accounts?)
More commands
More flexible speech input
Nicer interface
Web dashboard

",https://www.youtube.com/watch?v=iCnNRsLW0ns,https://github.com/Nedervino/HackUPC,,"Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg, Amazon Web Services - Best Use of AWS","node.js, alexa, lambda, amazon-web-services, socket.io, chrome, scalingo","University College London,UPC,UPC,VU Amsterdam",Amazon Echo,mbell,Matt,Bell,m.bell@cs.ucl.ac.uk,"",3,dmartmilln,David,Martínez,dmartinezmillan@hotmail.com,timnederveen,Tim,Nederveen,tim.nederveen@hotmail.com,Jaume,Jaume,Pladevall,jaume.pladevall@est.fib.upc.edu
Cryptobot,http://hackupc2017w.devpost.com/submissions/68796-cryptobot,"Inspiration

Learning about blockchain and cryptocurrencies this idea came to my mind.

What it does

It shows you data about exchanges and more when you ask to the bot.

How I built it

I built it with node.js in my atom editor.

Challenges I ran into

The autobahn version that its on npm its updated too much and it doesn't work with the documentation available on the project site.

Accomplishments that I'm proud of

Using the poloniex webservice for getting the data.
",,https://github.com/galaxyfeeder/cryptobot,,"","node.js, poloniex, slack",Universitat Politecnica de Catalunya,"",galaxyfeeder,Gabriel,Esteban,gabriel.esteban.gullon@gmail.com,"",0
filo : findthelost,http://hackupc2017w.devpost.com/submissions/68797-filo-findthelost,"Inspiration

What inspired me to do this coursework was my university! This project is in fact very similar to something we are required to do for uni, but I thought this could be a cool project to tackle as a hackathon, in a time restricted manner. Unfortunately this means I can't open source the project until after the submission deadline :( ...(but I will after that!)

What it does

The project is aimed at connecting good Samaritans who have found items of personal property with people who have lost property. Users can view what items are on the system, and after registering, additional features such as viewing detailed item information, submitting lost/found items, etc. become available to them.

Users can register using any valid email address, and can recover their password should they forget it.

Users can also limit the list of items using powerful filters, like category/location, newest/oldest, found/lost.

How I built it

I decided to build the project with Laravel. I did this because Laravel provides powerful templating capabilities, as well as great data validation/login system tools, and is nice to work with in general. I also decided if I was going to do a solo hack, now would be the time to work with some more unfamiliar technologies.

Challenges I ran into

The main challenge was designing forms that validate data correctly and effectively, as well as linking all the different aspects of the system together. Because Laravel is so good this wasn't too much of a challenge.

Accomplishments that I'm proud of

The sheer amount of work I've got done in the short amount of time is pretty insane, especially considering the lack of sleep! This is a fully working system that just needs some polishing.

What I learned

Lots and lots about Laravel, some CSS

What's next for filo : findthelost

The next things to implement are more features for the users. The key things I hope to implement are fine geolocation searching, messaging users, viewing more details about an item, and an administration panel (to prevent spam, etc).
",,,,"Best .tech domain, Scalingo Challenge: The coolest Hack Hosted on Scalingo","php, oo, laravel, css3, html5, caffeine",Aston University,"",nattyxd,Nathaniel,Baulch-Jones,xdnatty@gmail.com,Aston University,0
MAKE THE DIFFERENCE,http://hackupc2017w.devpost.com/submissions/68798-make-the-difference,"Inspiration

Change.org and similar pages

What it does

It allows the users of the platform to identify themselves by means of an identity document and so they can create proposals and vote in favor in a binding way and thus avoid possible fraud in the votes.

How we built it

Used Django for the backend, and HTML, CSS and JS for the frontend design.

Challenges we ran into

Integrate the use of an external API in the platform, and understand how it worked so to use it in the best possible way.

Accomplishments that we're proud of

We are proud to have reached the goals we set ourselves and to have a functional prototype that integrates and fulfills our main objectives.

What we learned

We used technologies that all the members of the team known previously, but we've improved our skills in that technologies.

What's next for MAKE THE DIFFERENCE

The following steps for our platform are the following:


Improve user interface design
Add graphs to analyze the flow of votes
Improve the quality of the PDF reports

",,https://github.com/xcervilla/hackupc2017w,,Signaturit Challenge: Best use of Signaturit API,"javascript, css, html, python, shell, django",Politechnic University of Catalonia,"",xcervilla,Xavier,Cervilla,xavier.cervilla@est.fib.upc.edu,"",1,Marcsolde,Marc,Soldevilla,soldevilla.marc@gmail.com
Twittola,http://hackupc2017w.devpost.com/submissions/68799-twittola,"We tried to develop other projects but unfourtunately we didn't succeed, so we thought about programming a webpage. Then we heard about Everis, who kindly ofered us his API. 

This API consists of two methods, one of them guess a text language and the other analyses the text and tells whether it is positive, neutral or negative.

We used the Twitter API to read the last ten tweets of a user timeline and build an algorithm to calculate if the user has negative or positive karma.

One of the most difficult handicap we had to overcome was to write the code which allowed us to access the user timeline and read his last tweets. Fortunately we could download Twitter API and implement it in our code. At first it was a little bit tough to understand but finally we got it.

Another problem was to find a way to access the Everi's node, which for security issue it was unreachable.
We must be very grateful to Everis's stuff, who showed us one way to access the node and helped us develop the extension.

We are very proud to say we have learned a lot during these 36 hours. We had never programmed in javaScript before, so this meant a challenge for us to make the extension run.
Twittola has actually exceeded our expectetives, but a next step could be reduce the number of nodes and make some interface improvements.
",,https://github.com/maxdoblas/Jackupece2017,,EVERIS Challenge: Help people with AI,"javascript, twitter, everis-api, html, node.js",UPC,"",maxdoblas,Max,doblas,maxdoblas@gmail.com,"",1,Peies,Pau,Tañà Viñeta,pautanya@gmail.com
Spy a Guy,http://hackupc2017w.devpost.com/submissions/68800-spy-a-guy,"Inspiration

We have shared a number of ideas related to geolocation and sharing. In the end this idea has taken shape and we decided to do it

What it does

The application is basically sharing a code that you generate.
The person who receives the code, puts the application and sees in real time, where you are and where you have been

How we built it

We divided into 2 teams, one part did the related to the server, and another part did what related to android

What we learned

We learned a bit of android and to work as a team.
we had lots of fun

team

Tomasz Bachosz
Łukasz Niepolski 
Nohus Marcin Wisniowski
Felipe tascón 
",,https://drive.google.com/open?id=0B6pOhr29sv8ecDJ6RkpvMUFTMkE,,"",android,"ins la pineda, etc","",ftascon,Felipe,Tascon,tascon17@gmail.com,New York University Abu Dhabi,3,EminemPL,Łukasz,Niepolski,nipek1@op.pl,Nohus,Marcin,Wisniowski,nohus@nohus.eu,TomaszBachosz,Tomasz,Bachosz,t.bachosz@gmail.com
StarMotion,http://hackupc2017w.devpost.com/submissions/68801-starmotion,"Inspiration

Wishing to build some graphic applications with WebGL or three.js, and having seen that MLH Hardware Lab had some LeapMotions, I decided to build a 'endless running game' controlled with my hand positions.

What it does

With a LeapMotion, it allows me to move around a asteroids field vertically and horizontally and also 'Do a Barrel Roll!' and shoot booms to destroy a great ammount of asteroids.

How I built it

I build it basically with three.js and the LeapMotion SDK, also using node + express + html... to dependencies, server, main view... respectively.

Challenges I ran into

LeapMotion provides a great API with also great examples but sometimes the hardware becomes a bit 'crazy' so it's difficult to program clean and soft movements with it. Also talking about three.js, my greatest challenge have been my ignorance about graphics, 3d models, cameras...

Accomplishments that I'm proud of

Having completed quite a complete and functional game within 1 and a half day with totally unknow technologies :D

What I learned

A lot about three.js and some cool functionalities you can get from LeapMotion.

What's next for StarMotion

If I have the chance to get another LeapMotion, I'd like to complete a bit more this game, cleaning its code, adding more gestures to create more movement types, and simplify the gameplay.
",https://youtu.be/dtjaOibRBko,https://github.com/JosepRivaille/StarMotion,,Scalingo Challenge: The coolest Hack Hosted on Scalingo,"javascript, html5, leap-motion, node.js, express.js",Polytechnic University of Catalonia,Leap Motion,JosepRivaille,Josep,de Cid,josep.de.cid@gmail.com,"",0
NERVE,http://hackupc2017w.devpost.com/submissions/68802-nerve,"Inspiration

We love to Karaoke on Saturday night, but our friend Pau is going to live with his girlfriend in the Netherlands. Because of this, we need a way to Karaoke with him although he's 1.535,5 km far. And now people also can vote for the best singer!

What it does

Nerve is a mobile app which enables couples to Karaoke in real time although they're not in the same place. Basically you login in the app and send a request to sing a song to your friend, when he accepts you're able to talk until you choose to start, and then, you just need to sing! 

Besides that, you can enter at nerve.gq and see the list of active Karaoke performances, voting if you like them or not. When a vote is emitted, the participants see in their screens the reaction with cool AR stuff like snow and confetti.

How we built it

We've built the mobile app with Android and the website with Meteor, and used Twilio for the video streaming.

Challenges we ran into

We've had to learn have to use Twilio because we never used it before. We also had to learn how to connect Android with Meteor. All this crash learning has been so challenging but also a great reward for us.

Accomplishments that we're proud of

Learning how to use this technologies we never used and having a new way to Karaoke with Pau when he leave us :D

What we learned

Twilio and the connection between Meteor and Android

What's next for NERVE

We are planning to finish NERVE in the next week and launch an alpha release to receive feedback from our friends. If the feedback is good, we'll probably focus on getting it better and iterate it continuously.
",,http://nerve.gq,,"","android, twilio, meteor.js, angular.js, opencv, realm, mongodb",Polytechnic University of Catalonia,"",anrodon,Andreu,Rodríguez i Donaire,andreu.rodriguez.i@est.fib.upc.edu,Universitat Politecnica de Catalunya,2,pautenavidal,Pau,Tena Vidal,pautenavidal@gmail.com,albertsgrc,Albert,Segarra,albertsgrc@gmail.com
Carthumbing,http://hackupc2017w.devpost.com/submissions/68803-carthumbing,"We wanted to learn some golang and react native, and try to solve the esri challenge.
We did an app to match hitchhikers with drivers.
In the future we want to match people according to their interests, and not only their route.
",,https://github.com/Nar67/carthumbing_api,,Esri Challenge: Improve Blablarcar search algorithm,"go, shell, react-native","FIB, UPM","",infaust,Faust,Terrado González,infaust.tg@gmail.com,"",1,vabada,Dan,"",abadabanades@gmail.com
inclusivewords.com,http://hackupc2017w.devpost.com/submissions/68804-inclusivewords-com,"Inspiration

To get people to use gender neutral language and support communities that welcome all people, without using language that might exclude some. 

What it does

Acts as a reference tool and place for people to submit alternative phrases in their native language.

How we built it

Built using a static HTML site on GitHub Pages.

Challenges we ran into

The jquery slider library did not want to work at one point, badly fixed this by forcing with !important tag in the CSS (bad practice, don't do it kids!)

Accomplishments that we're proud of

This is the first web page that Amy has built without using a template! She is super happy to have done something from scratch and actually understands now a little more about the workings of JavaScript thanks to Bil from MLH! <3

What we learned

How to include JavaScript and use the slick slider jquery library, how to build CSS from scratch, how to say hi everyone in many languages!

What's next for inclusivewords.com

Let people submit phrases to it through pull requests. Ask people to contribute or make suggestions for additional settings or challenges for inclusive language. 
",,https://inclusivewords.com,,"Best Domain Name from Domain.com, #HackHarassment, Best hack by Bloomberg","html, jquery, javascript, css, sublime-text, github, githubpages, domain.com","University of Nottingham; City, University of London; Birmingham City University","",amydick,Amy,Dickens,ac.dickens@icloud.com,"",2,pandelis,Pandelis,Zembashis,info@pandelis.me,abdulajet,Abdulhakim,Ajetunmobi,abdulrapidz@live.com
Trump attack,http://hackupc2017w.devpost.com/submissions/68805-trump-attack,"Inspiration

We were bored of traditional games and we want to be different of the rest of the participants and we decided to make a funny hack.

What it does

We make our dream real, we can drive the Millennium Falcon and shoot giant heads of Donald Trump.

How we built it

With a lot of patience, Unity, Photon and C#

Challenges we ran into

Learn unity, photon and C# in 36 hours, make the thing in the exactly way that we want and work like a group.

Accomplishments that we're proud of

We think its a funny game, very original and addictive

What we learned

We learned to work like a group, C# in 2 days , and programm graphically with unity.

What's next for Trump attack

We must improve the enemy spawn waves, add cronometers, and invent other enemies.
",https://www.youtube.com/watch?edit=vd&v=j9WVA0B4W7s,,,"","c#, unity, photon",Universitat Jaume I,"",davidgd97,David,Gomez,davidgd97@gmail.com,"",0
Emaption,http://hackupc2017w.devpost.com/submissions/68806-emaption,"Inspiration

We are very interested in Artificial Intelligence and analysing data so we thought that we could leverage the Everis Moriarty API to understand the emotions that people express over the social media and reflect this in a map.

What it does

Collects tweets across geographical areas and displays the overall emotional sentiment within different provinces of Spain. 

How we built it

We built a python server using Tornado that provides a websocket entry point which is called by a front end web application based on JS and displays the information in real time over a google map.

Challenges we ran into

Restricting the idea to something that is both interesting and achievable. 
Python2.7/Python3+ compatibility issues.

Accomplishments that we're proud of

Accomplishing a minimum viable product in a short period of time and learning a number a new technologies (Websockets, Google Maps API, Everis Moriarity...)

What's next for Emaption

Expand to visualise data for other countries, integrate other social media, etc... Make this become WORLD WIDE! :D 
",,https://github.com/cgmcintyr/hackupc,,"EVERIS Challenge: Help people with AI, Best hack by Bloomberg","python, javascript, tornado, websockets, google-maps, ai, everis-moriarty",University of Sheffield,"",bleivablanco1,Borja,Leiva,bleivablanco1@sheffield.ac.uk,Univerisity of Sheffield,3,mattburman,Matt,Burman,matt@mattburman.com,ChrisMcIntyre,Christopher,McIntyre,chrsintyre@gmail.com,_dannycjones,Daniel,Jones,dcjones1@sheffield.ac.uk
MotoCare,http://hackupc2017w.devpost.com/submissions/68807-motocare,"INSPIRATION

Traffic accidents are frequent every day and although it would be over-optimistic pretending to achieve zero victims, we can do our best to decrease human loses. We’ve decided to focus on motorbikes, but the concept is extensible to other types or vehicles. On the other hand, in special situations, emergency services need to know the amount of people in danger within a certain zone, and if they need urgent assistance.

WHAT IT DOES

We’ve built the device that will look after your life, alerting emergency services in case of accident and transmitting your exact location to assure the medical assistance can know where to go, even if you cannot tell them.

First, there’s a jacket with a strip of LEDs attached to it, to shine in case you have an accident and make easier to find you. This jacket turns on when you fall accidentally from the bike, and notifies the Arduino 101 that you probably have had a drop. 

In this moment, the Arduino system enters in Emergency Mode, and sends via Low Energy Bluetooth a signal to the Android smartphone to notify the possible accident. Then, if in within 10 the Android alarm has not been dismissed, an emergency protocol is started, calling a particular phone number that can be preset, or doing whatever the user has chosen to do in this case. 

HOW WE BUILT IT

Starting with a basic idea, we’ve been developing and improving the initial concept until reaching a functional prototype. 

There are four of us in our team and everyone has focused on one essential part of the project. But when someone has been stuck, the other have helped to solve the problem. 

ACCOMPLISHMENTS THAT WE'RE PROUD OF

In less than 36 hours, we've designed and implemented a functional device, that also is user-friendly and simply in appearance.

WHAT WE LEARNED

We’ve learnt Low Energy Bluetooth protocols, as well as how to implement them to communicate Android devices with Arduino boards. 

WHAT'S NEXT FOR MotoCare

Extend the mechanism to other vehicles, improve of the sensors in case of accident, pattern analysis to prevent risks on the road…

SPECIAL ACKNOWLEDGEMENTS

Xavi Algarra for the pieces of advice and ideas, the 4 Hardware guys from the A5202 for the tools, explanations and recommendations and the guy who lend us the Arduino 101.
",https://youtu.be/6bJzaIQGm80,https://github.com/marcbenedi/HackUPC17W,,"Best Domain Name from Domain.com, EVERIS Challenge: Help people with AI, Esri Challenge: Improve Blablarcar search algorithm, Best .tech domain, Between Challenge:  SmartLocation to save lives, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","arduino, android, django, scalingo, hardware, bluetooth, pizon, iot, intel-curie, javascript",Universitat Politècnica de Catalunya - BarcelonaTECH,"Intel Edison,Arduino 101",hhermesvf,Hermes,Valenciano,hermes.valenciano1996@gmail.com,"",3,marcbenedi,Marc,Benedí,marcbenedi.sanmillan@gmail.com,alexusgracia,Alexandre,Gràcia Calvo,alexusgracia@gmail.com,helbaroudy,Hussein,Kasem,hkasem@gmail.com
NeuName,http://hackupc2017w.devpost.com/submissions/68808-neuname,"Inspiration | What it does

A human being dwelling a life of a deep solitude, a journey of himself constantly striving to find a fulfilment amongst other so alike yet so distant. The discrepancies differ us although aiming for the similarities using the contemporary technologies we are able to find the lacking link through the neural networks. The rest follows up below.

How we built it

We engineered very complicated Neural Network and then simplified it because it required too much memory :P
We used LFW Face Database which contains pictures of faces with names.

Challenges we ran into

Finding NN architecture which allows resolving the task.
Training good model.

Accomplishments that we're proud of

This project is one of three that we started on this hackathon.
We started with predicting number of reactions for posts then we wrote NN for predicting names and last but not least
we tried style transfer for music but it was too slow.

What we learned

Processing images in python.
Use of convolutional layers.
Style transfer for music.
Use of fastText for reactions prediction.

What's next for NeuName

Better training on bigger dataset with more names.
Maybe we will find some useful application for the  model.
",,,,Best hack by Bloomberg,"python, javascript, react-native, tensorflow, flask, keras, pandas, numpy, neural-networks, pillow, lfw-face-database","Warsaw University of Technology, King's College London","",MarcinMatlacz,Marcin,Matlacz,matlaczm@ee.pw.edu.pl,"",2,mpawel951,Paweł,Mucha,guy_881@yahoo.pl,annabanasik,Anna,Banasik,banasikannie@gmail.com
TTTiPoT,http://hackupc2017w.devpost.com/submissions/68809-tttipot,"Inspiration

We were all keen to learn new web development technologies alongside Twitter's Streaming API.

What it does


Takes a stream of random tweets using Twitter Streaming API
Analyses the images in the tweets using Clarifai API
Finds the most common things within sample photos
Displays a live ranking of most common things


How we built it

We used Python and Flask, with Socket IO for a web socket. Too much JSON was involved.

Challenges we ran into

Clarifai doesn't work very well, the web socket was a nightmare. Tiredness can kill.

Accomplishments that we're proud of

We have a pretty decent end product, which works as intended and looks good.

What we learned

We learnt a lot about Python, Flask, web sockets, and the Twitter and Clarifai APIs.

What's next for TTTiPoT

Would work well with much more data: we were limited by the number of requests to Clarifai we could make. Implement more of Clarifai's models and potentially train our own model.
",,https://tttipot.scalingo.io/,,"Best .tech domain, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","python, flask, socket.io, clarifai, twitter, html5, css3, javascript, jquery, sass",University of Sheffield,"",gjives1,Greg,Ives,gjives1@sheffield.ac.uk,University of Sheffield,3,DarrenVong,Darren,Vong,d.vongy@gmail.com,brdixon1,Ben,Dixon,brdixon1@sheffield.ac.uk,robjtede,Rob,Ede,robjtede@icloud.com
VisionWare,http://hackupc2017w.devpost.com/submissions/68811-visionware,"VisionWare

Hackathon HackUPC project

This is unique application that intends to help people with vision impedance to find items in the room. 

Idea

Idea is that user should be able to find exact location of the requested item from Voice assistant. 
User should also get brief feedback of what items are nearby. 

The phone/tablet scans the room while user holds device. Ideally I think users will have attached device on chest for full experience.

User can ask for specific item:

User:           ""Please find me my laptop""
Assistant    ""I found one laptop nearby, it's in 2 meters left from you.""  

if there are multiple items in the room answer will be following
Assistant     ""I found five laptops nearby, the nearest one is in 2 meters left from you.""

User can ask for nearby items:

User:           ""What items are nearby?""
Assistant     ""There are 5 laptops, 3 chairs, 2 tables and 10 more different items near you.""

How it's done?

I used new Google Project-Tango that enables device to scan the room and localize later in the same room to the exact coordinate system. 
I also used clarifai API for labeling items in the room. 
The mixture of those apis (and couple of more Android libraries) is VisionWare :)
",,https://github.com/Ioane5/visionware,,Best hack by Bloomberg,"java, android, clarifai, project-tango",University of Tartu,"",Ioane5,Ioane,Sharvadze,ioane.sharvadze@gmail.com,"",0
"Medbay, the AI-powered medical kit",http://hackupc2017w.devpost.com/submissions/68812-medbay-the-ai-powered-medical-kit,"Inspiration

After attending this year’s MWC we realized that connected living can be quite a challenge for the elder. This is why we have focused the development of our hack on building what could be the next generation of home medical kits, a smart device that aims to ease the follow-up of medical treatments and improve the patients' experience. Say hi to Medbay, the AI-powered medical kit!

What it does

Medbay is an AI-powered medical assistant that has been developed to help patients, families and doctors by making the tracking of ongoing treatments easy. This medkit has been built using Amazon’s Alexa so it can understand the user’s symptoms via voice recognition and offer a non-prescription drug that is automatically delivered. Its companion app is meant to be used by doctors and caregivers to keep an eye on the progress of the different treatments, track the medicine intake and receive alerts in case the device is being used by someone else.

Medbay consists on the medical kit, which is the hardware, and a mobile app for doctors that’s linked to it. This way, they can interact with the system and monitor the patient’s drug use. The system is able to understand your symptoms and offer you a non-prescription drug based on them. In the tracking page of the app, the doctor can see information of the daily progress of the patient, assessing if he or she sticks to the treatment. A part from the database of prescriptions and the inventory of stored drugs, having the history of symptoms and drug consumption habits will help the doctor readjust the treatment and even find patterns of misuse. The app also allows for the integration of prescriptions. Doing it is as simple as filling a form or just scanning a QR code from the prescription. This QR contains information on the name of the drug, the dose and the schedule. Then, this is signed in a secure and legally-binding way thanks to Signaturit API.

How we built it

To build the Medbay we have used everything in our toolbox, from hammers and saws to stepper engines, Alexa’s API, Go Language for the programming, Progressive Webapp development, Sketch and Illustrator to design the whole UI.

Challenges we ran into

We ran into several challenges while developing and deploying the project. First of all, although we had reserved Amazon Echo a week before the event, they were gone by the time we got to the hardware depot. That implied that we had to configure Alexa (Voice and Skills) from scratch. After that, we had to figure out how to setup the engines, we were having some issues to make them work the way we wanted them to. Related to the design of Medbay itself, we encountered the kind of problems teams face when developing hardware: finding the right parts, figuring out the mechanisms and putting it all together when finished. To design the UI we used Sketch and, since it was our first time using this tool, taming it took us a bit of time.

Accomplishments that we are proud of

First of all, we are proud of submitting the project on time, developing a piece of hardware always adds a layer of complexity to the problem. Managing to setup Alexa without Amazon's Echo would be another thing we are very proud of. It was also the first hackathon where Ricard and Adrian had to get their hands dirty with code and we think it shows a progression of the team, being more cohesive hackathon after hackathon. 

What I learned

Prototyping techniques, consolidated web design fundamentals.

Built With

Go, Alexa API, Python, Sketch, Illustrator, HTML, CSS, Scalingo, Signaturit API.

What's next for Medbay, the AI-powered medical kit

Pattern analysis of the medicine intake of each patient to help the doctors' workflow.
Build a better prototype (we think it's pretty cool as it is).
Add notifications to the APP (""Call me if I forget system"").
Add a display to the medkit to improve usability and track of medicines stored.
Biometric data acquisition and analysis through a wide variety of sensors (IR for temperature, galvanic skin response, heart rate sensors, blood sugar analysis and insulin dispensers).
",,https://github.com/novikk/medbay,,"Signaturit Challenge: Best use of Signaturit API, Scalingo Challenge: The coolest Hack Hosted on Scalingo","go, amazon-alexa, python, html, raspberry-pi, sketch, adobe-illustrator, scalingo, signaturit, css3","EADA, Universitat Pompeu Fabra, Universitat de Barcelona","",adiaz,Adrian,Diaz,a.diaz@protonmail.com,"",3,nov1kk,Ivan,de la Rubia,ivandelarubia@gmail.com,dtd93,David,Tamayo Domènech,davidtamayo93@gmail.com,ricard_tg,Ricard,Tapias,joaprim@hotmail.com
Bind it,http://hackupc2017w.devpost.com/submissions/68813-bind-it,"Inspiration

We wanted to develop a game with a cool core functionality.

What it does

It works and it is fun.

How I built it

With Unity and lots of redbull

Challenges I ran into

Git, Pathfinding, rendering dinamic lines

Accomplishments that I'm proud of

Solving all our challenges

What I learned

To properly use git and soome Unity knowledge.

What's next for Bind it

Online Scores
",,http://www.kongregate.com/games/GamesByGeri/bind-it,,"","unity, c#, visual-studio",FIB,"",wextia,victor,alcazar,valcazar96@gmail.com,UPC,0
KarmaNews Telegram bot,http://hackupc2017w.devpost.com/submissions/68814-karmanews-telegram-bot,"Inspiration

Sometimes, reading news is a chore. You can get very dire views of the world in the moments you less need them. For those times, KarmaNews gives you back some faith in humanity.

What it does

This bot will post news pieces from time to time, or when directly asked. When added to a group, it will track the messages sent there and rank the positive-ness of the environment using the Everis APIs.

How I built it

We may have learned python today. 
Seems good. 
Google approves.

Challenges I ran into

The Telegram API is hell, but manageable. We worked in groups through git, and some ""fun"" events happened. Read: entire python script got wiped without warning.

Accomplishments that I'm proud of

We may have done this during the last night. 

What I learned

We may know python now. 
Telegram bots are really cool to build and we are definitely trying some new ideas on them soon. 

What's next for KarmaNews Telegram bot

Pulling the news from ie. Reddit instead of hardcoding them into arrays!
",,https://github.com/ProtocolNebula/karma-news-telegram-bot,,"EVERIS Challenge: Help people with AI, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","python, telegram, flask, scalingo, http, everis","Universidad Politecnica de Cartagena, Universidad de Valladolid","",p4block,Pablo,Moyano,42.pablo.ms@gmail.com,"",3,ProtocolNebula,Ruben,Arroyo Ceruelo,powergm@hotmail.es,elementh,Lucas Maximiliano,Marino,elementh.github@icloud.com,Ivicc,Ivan,"",iveecc@gmail.com
Emergency-helper,http://hackupc2017w.devpost.com/submissions/68816-emergency-helper,"Inspiration

It is actually sad that after been to soo many hackathons, nobody never proposed something like that. When I heared the idea I knew it that I had to do it

What it does

It automatically tracks your mobile, and warns you in case of being in a disaster zone. Optionally it was about to get the chat feature, but the time didn't reach

How I built it

First of all we have the true power, the backend, holding all the queries strongly without even slowing down.
Then to connect the users and emergency services, I built an iOS app, with the habiltity to see if we are in danger or not, and a webservice that allow emergency workers to find people in an affected area

Challenges I ran into

CORS, hundreds of petitions per second, live tracking, geoJSON parsing.

Accomplishments that I'm proud of

Solving the challenges previously mentioned

What I learned

I improved all my experience on nodejs swift and webapp, but also I get in touch again with leaflet, learned how firebase works...

What's next for Emergency-helper

Live Chat feature, and algorithm improvement

Links description

Github repos(1 backend,2 webapp, 3 iOS)
Webapp hosted on github
Rest backend on scalingo
",,https://github.com/xavo95/HackUPC2017w-emergency-backend,,"Between Challenge:  SmartLocation to save lives, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg, Amazon Web Services - Best Use of AWS","node.js, javascript, html5, php, css, swift",Universitat Politecnica de Catalunya,"",xavo95,Xavier,Perarnau,xaviermailweb@gmail.com,"",0
IonicFIB,http://hackupc2017w.devpost.com/submissions/68817-ionicfib,"IonicFIB

Ionic FIB is an application made with the Ionic v2 Framework. And as a result, it gives an Android compatible application. As it is a webapp, it also can be executed on Web.

The main goal of this app is to check the new FIB API v2. Accessing both sides of it. The public part and the private part, which requires an OAuth authentication.

What do we offer?

At the moment the application does tiny actions, like:


Authenticating with OAuth v2.
Shows the user day planning.
Shows the user alerts.
Calendar which gives the opportunity to the user to select the subjects that he want to study. The algorithm reports the user one of the bests combinations. Combination based in: less overlap, less 'dead hours', ... .


What's next?


Remember the login. At the moment the application asks the password every time that is opened.
Many features that this app offers to the developers (I won't tell which ones, it's a secret shhh).

",,https://github.com/LaQuay/IonicFIB,,FIB API Challenge,"ionic, typescript, webapp, api",UPC,"",LaQuay,Marc,Vila,marcvila10@hotmail.com,"",1,elorenteg,Ester,Lorente,ester.lorente@est.fib.upc.edu
Glitch Grid,http://hackupc2017w.devpost.com/submissions/68819-glitch-grid,"Inspiration

I thought in a game with simple graphics and gameplay. The first idea was something like a cave exploration, but ended being something different. 
The meaning of the movements may be thought as different height levels, where you can't jump from a so high one because you would be hurt, nor climb a too high one, because you are just a regular human being.

What it does

The goal is to collect as many coins as you can. To reach them you will have to find a path through the map, which consists in cells of different colors, and each color constrains your possible movements. You can also swap the color of the cells that surround you in order to find new ways to the coins.

How I built it

The game was built entirely with the Unity3D engine.

Challenges I ran into

Accomplishments that I'm proud of

Having built a full and playable videogame using my own resources, in less than 48h and by myself. 
Exploiting a personal idea that has become something real.

What I learned

To develop a videogame in Unity using my own resources.

What's next for Glitch Grid

Android version.
Different game modes: Time limit run, multiplayer, and more.
",,https://github.com/Martiruhay/GlitchGrid,,"","c#, unity",Facultat d'Informàtica de Barcelona (UPC),"",Martiruhay,Martí,Lloveras Rosales,marti-nini@hotmail.com,"",0
Signature Conditions,http://hackupc2017w.devpost.com/submissions/68820-signature-conditions,"Inspiration

The good old ""I've read and accept the terms of service"" doesn't cut it anymore. 

A company needs to trust their users to provide a better service, and that simply isn't possible nowadays. Banks are an example of this, as some online interactions require you to physically go to one of their entities sooner rather than later.

What it does

Signature Conditions brings real life document signing to the web, allowing legally binding contracts to be taken purely online as barriers of entry, or allowing applications that were previously impossible due to legal reasons. 

How we built it

We hacked the signatureit API (which provides 99% of the actual, legally binding functionality and UI) to work in surprising ways.

Challenges we ran into

We had many troubles making it work for some reason. We blame dragons.

Accomplishments that we're proud of

It works, and it's not 9 AM yet.

What we learned

We've learn the Signaturit API and how to work with scalingo.com, sharing this knowledge with our other submission.

What's next for Signature Conditions

We think this kind of implementation will get scarily popular in the future, with enormous consequences for both users and providers.
",,https://digitali.tech/,,"Best .tech domain, Signaturit Challenge: Best use of Signaturit API, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","scalingo, node.js, html5, signaturit, css, javscript","Universidad Politécnica de Cartagena, Universidad de Valladolid","",ProtocolNebula,Ruben,Arroyo Ceruelo,powergm@hotmail.es,"",3,elementh,Lucas Maximiliano,Marino,elementh.github@icloud.com,p4block,Pablo,Moyano,42.pablo.ms@gmail.com,Ivicc,Ivan,"",iveecc@gmail.com
Leap Pong,http://hackupc2017w.devpost.com/submissions/68821-leap-pong,"Inspiration

Since the last Hackathon we participated in October, we wanted to learn Unity, so we came up with an idea for a simple game to learn the basics.

What it does

It's a 2D Pong version (meaning each player has two pads), controlled by Leap Motion. 

How We built it

We built it in Unity, importing the LeapMotion assets.

Challenges we ran into

Two days ago, we didn't know how to do anything that we did in this project, so figuring out how to do everything right was the most challenging part of the project. Also, we had planned for our team to be of 4 members instead of 2, so we had to narrow down the possibilities for our project due to that.

Accomplishments that we're proud of

We're especially happy because we were able to create a finished project, something that could stand on its own. We think it's a cool concept and the graphics are awesome.

What I learned

To make Leap Pong, we had to learn Unity from scratch (including C#, although that wasn't very hard because both of us already know C++ and Java). The hardest part was probably how to run the same game in two computers in the same LAN. We also learned how to use Leapmotion.

What's next for Leap Pong

If we have time, in the following weeks we'd like to polish the last remaining bugs and make sure that it's a consistent program, and maybe add more game modes that make it harder.
",,https://github.com/xerobyte/LeapPong,,"","unity, leap-motion",UPC,Leap Motion,xerobyte,Pau,Surrell,pau.surrell1@gmail.com,"",0
WordWeaver,http://hackupc2017w.devpost.com/submissions/68822-wordweaver,"Inspiration

The web http://www.zompist.com/gen.html served as the main inspiration for this project, since this project's main goal is to port its features to an Android app for more comfortable mobile use.
In fact, the app comes with 2 sample ""languages"" that are the 2 samples given by Zompist.

What it does

It generates words in a very similar manner to the original web (or at least the results are similar). There's also a planned feature of being able to save configuration templates as ""Languages"".

How I built it

First I reimplemented the word generation in plain Java 1.8. Then, I moved the code onto an old Android app template I had (as the core of the project was word generation, not Android app development).

Challenges I ran into

Rewrite rules on short words where everything happens to be rewritten is dangerous and prone to index out of bound exceptions, even for index 0. Lesson learned.

Accomplishments that I'm proud of

It works, it's legible, and under natural phonotactic rules it looks really natural. I also have a couple more features I missed from the web (equiprobable syllables, and custom dropoff percentages for everything - or at least there's code to allow for that, we'll see if I manage to finish the UI in time to use it).

What I learned

See above, on challenges.

What's next for WordWeaver

Hopefully ability for more abstract rewrite rules, and ways to collect ""all consonants with phonetic feature X"" as a target for a rewrite rule. After that, we'll see. Probably more phonotactic features.
",,https://github.com/vylion/WordWeaver,,"","java, android-studio",UPC,"",vylion,Guillermo,Serrahima,volfaria@gmail.com,"",0
CareBot,http://hackupc2017w.devpost.com/submissions/68823-carebot,"CareBot

CareBot is a chatbot software for answer three types of situations: cuts, sprains and bruises. Shows to the user what to do and if it is needed shows the near hospitals.

Screenshot



Usage
git clone https://github.com/Howarto/hackupc2017-carebot
npm install
node server.js

License


MIT. See LICENSE file


Version


Version 1.0


Suggested links

Botframework project

Microsoft Azure Service
",,https://github.com/Howarto/hackupc2017-carebot,,"#HackHarassment, Best hack by Bloomberg","javascript, node.js, npm, azure, json, async, api",FIB,"",Howarto,Diego Lao,Tebar,howarto@ymail.com,"",1,Alcasser,Albert,López Alcácer,alcacer.la.1001@gmail.com
twotter,http://hackupc2017w.devpost.com/submissions/68824-twotter,"Inspiration

Our greatest inspiration is our need to learn.

What it does

It gives you an opportunity to write what you think and share it with the world.

How we built it

We used Python with flask, and most importantly- web sockets.

Challenges we ran into

We were very small team (just two of us) so we had a little of time to finish the application. Nevertheless it was great fun and we learned a lot.

Accomplishments that we're proud of

We made web socket work- in a way :)

What we learned

A little bit about bootstrap, and few things about web sockets.

What's next for twottter

I thing that commercial future might be hard for our product, but we still can develop it in the future.

Challenges we ran

Lack of time, lack of toilet paper, not enough sleep
",,https://github.com/alcaster/Egypt_HackUPC2017,,"","python, bootstrap, javascript",Warsaw University of Technology,"",okraskaj,Jan,Okraska,okraskaj@ee.pw.edu.pl,Warsaw University of Technology,1,alcaster,Marcin,Chalecki,alcaster@op.pl
BringBread,http://hackupc2017w.devpost.com/submissions/68825-bringbread,"Inspiration

Our lovely moms always reminding us to bring stuff when coming home, especially bread

What it does

This app tracks your gps position whenever someone in your house makes an alert needing anything. When you get close to the shop (whose location you define via maps) it will remind you so your mom isn't upset.

How we built it

Using Android Studio, the Firebase cloud service and a node.js server running in a heroku instance.

Challenges we ran into

How to continously track position, how to manage background services, net communication from Android..

Accomplishments that we're proud of

An app that runs in the background and has accurate position tracking and managing multiple user interfaces synchronized with a database, and push notifications.

What we learned

How to properly manage background services (gps, server communication, notifications...) on a android app.

What's next for BringBread

I'm sure we will try to scale it and bring it to production. Help families bring bread all around the world.
",,https://github.com/matiszz/hack17,,"","android, heroku, node.js, firebase, love",FIB,"",Alfredu,Aleix,Sanchis,aleixsanchis@hotmail.com,"",1,matiasszarfer,Matias,Szarfer,matias.szbar@gmail.com
partyDonator,http://hackupc2017w.devpost.com/submissions/68826-partydonator,"Inspiration

We came to the hackathon with only one Alexa under our arms and no ideas in our heads. Well, we had a bunch of ideas, but couldn't decide on which we liked the most. We wanted to take up a challenge. We knew nothing about alexa programming but had all the energy in our hearts. When we though about this amazing hack we knew alexa and our hack were meant to be together. 

What it does

Imagine the typical day, in which you're laying on the sofa and some friends convince to go for a beer. You decide to go out, but of course tomorrow you have work to do. You'd like to get back home early, but you also know yourself. When you go out with those friends, you know when it starts but not when it will end. Luckily for you, the Party Donator has been born to help you. You only have to tell Alexa that you're going out and when you expect to return. She will remember that time. For each half an hour you're late, she will donate 2 euros to clowns without borders. Therefore, you will want to get home early for an extra reason, but still if you're late you'll be helping people. We intend the Alexa skill to have costumizable times and ammounts of money, but couldn't implement it on this first version. 

How we built it

Our first idea was to use entirely the amazon developer. However, with only two days and no experience we realized we needed to look somewhere else. After a full night of investigation and sweat, and no sleep at all, we discovered SELENIUM. Selenium is a java library that allows you to interact with your internet browsers. So, instead of letting Alexa read the commands and keep them for herself, we hacked her history webpage. With that, we are able to easily read commands and act upon them. At the same time, we implemented an Alexa skill that makes her answer to the users requests, so the user believes to be speaking to Alexa herself. 

Challenges we ran into

Amazon developer tools are, by far, the biggest challenge we encountered. However, we won't ever forget the crude journey towards getting ownership of the HISTORY html. The first challenge was solved by not using it much. Nevertheless, we conquered the latter by our own rights. 

Accomplishments that we're proud of

We're prowd to have a functional program that gives actual money to an NGO. By that, we reach one of our goals, which was having a hack that helped both those in need and the user, by allowing him to gain consciousness of his acts. 

What we learned

We learned sleeping is not always necessary. Apart from the obvious, we also learned all kinds of coding skills that we never knew existed in languages we had never used, such as python, lambda, and even html. 

What's next for partyDonator

We have a couple of ideas that we couldn't implement while here. First of all, we'd love to have more costumizable options. Moreover, we discussed about connecting it to a phone and being able to control the user's location through gps, so that if he forgets to inform Alexa about his whereabouts he won't have to worry (the gps knows he's at home). The small upgrade we were not able to push forward in the end was our idea of having a recording of all the money spent on the NGO, but you shall see it soon.
",,https://github.com/Diana0604/partyDonator,,"EVERIS Challenge: Help people with AI, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg, Amazon Web Services - Best Use of AWS","java, lambda, amazon-alexa, seleniumm",UPC,"",Diana0604,Diana,Vallverdu,diana.vallverdu@gmail.com,"",2,zairaros,Zaira,Ros,zairaros@gmail.com,martaaa,Marta,González,marta.gonzalez.sentis@gmail.com
AI Barney,http://hackupc2017w.devpost.com/submissions/68827-ai-barney,"AI Barney



AI Barney is an iOS app that helps people to get know each other with adaptive tips during a conversation. To achieve that we intersect users' Facebook accounts. 

Algorithm keypoints


Sentiment analysis based on Machine Learning algorithms.
Online tips update after every message.
Intersect person profiles in different categories, including general information, music, friends, interests, etc.


Built With


Algorithms: Python, sklearn
iOS: Swift 3, Xcode 8, Sketch
BackEnd: Python, Django, AWS, Facebook

",,https://github.com/mashaka/AIBarney,,Amazon Web Services - Best Use of AWS,"python, django, amazon-web-services, sklearn, swift-3, xcode-8, sketch, facebook",Moscow Institute of Physics and Technology,"",mashaka,Maria,Sandrikova,mashasandrikova@gmail.com,Moscow Institute of Physics and Technology,3,adanilyak,Alexander,Danilyak,adanilyak@gmail.com,Shkiper,Aleksei,Zhuravlev,aa_zhur@mail.ru,ryad0m,Mark,Ryabov,m.ryadom@gmail.com
Everyday Hero,http://hackupc2017w.devpost.com/submissions/68828-everyday-hero,"Inspiration

We heard that the rate of people gone missing have risen lately and we wanted to do something about it. Thinking about what we could do to help, we also remembered about the multiple occasions when, going back home at night or walking around certain neighborhoods we would have appreciated someone to make us feel safe. That's when the idea came to us. Why can't we have an app that provides us that kind of safety? Why can't people around us know that we are in a struggle and help? And why can't we do the same to make other people's lives a little better? Why can't we all be heroes for each other in small ways?

What it should do

Everyday Hero is an Android app with an intuitive interface that protects you in several levels.

The first situation would be when you are in a situation in which you would need someone to walk by your side and make you feel safer. With this app, you can achieve that in just one click. 

By using the ""I'm scared!"" button, a message is immediately sent to all the users around your perimetre within your location and the option of chatting with them is also available.

Secondly, if you are in a real danger situation, there's a second button that gives you the option to ask for help to the authorities. People around you are also alerted about your situation through a notification and, in order to draw everyone's attention, an alarm will start to ring from the victim's phone.

Finally, the application gives the user the chance to make a difference by finding people in danger around them and dedicating some time to improve their day.

How we built it

The UI is developed in Android Studio and all the part involving maps use Geofence, which makes use of several Google Services. We also configurated an electronic server from Amazon Web Service.

Challenges we ran into

First of all, programming in Android was way harder than what we could have ever imagined, so we couldn't achieve everything we expected on time. Working with Google Play Services was a little complicated, but the real challenge came with Geofences. The intention was to use them to detect whenever some user would come closer to a potential victim. However, the mere understanding of Android, its permissions and its language in general took us a lot of time and effort, leaving very little time to deal with the integration of the server with the geofences aplication. In the end, we were able to send the help cry to the server, but not to spread it among the other users.

The server, however, was not any easier, and that's why we could not achieve to communicate with other devices in order to ask for help or chat with them.

Accomplishments that we're proud of

Developing our FIRST Android app! =DD

Also, surviving 36 hours with barely any hour of sleep and managing to still be alive and keep dealing with Android.

What we learned

ANDROID STUDIO. A LOT. FROM THE BEGINNING, starting with a review of classes and objects with Java.

Also, we created our first brand new API.

What's next for Everyday Hero

Taking the ideas that we could not finally integrate into reality.

Additionally, we would like to extend the application to people who, even though are not in an immediate danger, are having a rough day and could use someone's advice. 

If we could put more work into this project, we would also like to include the option of managing making statements from site - by signing a formal declaration - in the unfortunate case the hero witnesses a felony, among many other possible extensions.
",,http://github.com/ccorbella/HackUpcWinter,,"#HackHarassment, Between Challenge:  SmartLocation to save lives, Best hack by Bloomberg, Amazon Web Services - Best Use of AWS","android-studio, google-maps, google, location-labs-geofence, python, flask, amazon-web-services, love, food, lack-of-sleep",UPC,"",ccorbella,Conrad,Corbella Bagot,conradcorbella@hotmail.com,"",3,saugch,Maria,Guasch,maria.guasch.m@gmail.com,gemmact95,Gemma,Canet Tarrés,gemmact95@gmail.com,aina_galofre,Aina,Galofré,aina_galofre@hotmail.com
HackUPC2017,http://hackupc2017w.devpost.com/submissions/68829-hackupc2017,"HackUPC2017
",,https://github.com/Xilef09/HackUPC2017,,"","javascript, html, css, mongodb, express.js, angular.js, node.js, bootstrap",FIB-UPC,"",Xilef09,Felix,Hortelano,felix.hortelano@est.fib.upc.edu,"",3,DanielFarre,Daniel,Farre,ringar90@gmail.com,shockstate,Guillem,Bonafonte,guillem.bonafonte@gmail.com,Julian4Suarez,Julian,Suarez,julian4suarez@gmail.com
Safe Me,http://hackupc2017w.devpost.com/submissions/68830-safe-me,"Inspiration

Safe Me inspiration came from the challenge sponsor Between Technology set up. We wanted to create a useful app that could help people on difficult situations in a different way Alpify (for example) does.

What it does

When a user installs the app, the phone automatically keeps Safe Me's server updated with its location. If a user within a 1 km radius needs help, an alarm will trigger and ask him to choose whether he wants to help. If he does, a map with the position of that person will appear so that the endangered user will be able to receive help immediately.

Moreover, it is possible to see all the people who need help on real time on a map. This allows authorities, in case of a severe emergency, to know exactly where to move in order to save as many people as possible.

How we built it

The team was split in two, so a part started building the Android App while the other was developing the web services needed in Django and JavaScript. Once we had a semi-functional app, we started adding Firebase Cloud Messaging to allow a real-time communication between the server and Android devices. Django is hosted on AWS Web Services.

Challenges we ran into

Being our first hackathon, time management was complex. We also had to learn Django and Firebase Cloud Messaging from zero, as we did not have any prior knowledge on these.

Accomplishments that we're proud of

Finishing a usable product which could help other people in a little amount of time, which of course can be improved on following updates.

What we learned

Sending push notifications to devices and usage of Django.

What's next for Safe Me
",,http://35.166.59.33:8000,,"Between Challenge:  SmartLocation to save lives, Best hack by Bloomberg, Amazon Web Services - Best Use of AWS","android, django, python, firebase, javascript, amazon-web-services","Universitat Politècnica de Catalunya, Universitat Pompeu Fabra","",ecodina,Eloi,Codina Torras,eloi.codina@gmail.com,"Pompeu Fabra University, Universidad Politécnica de Cataluña",3,marks97,Marc,Amorós,mark.amoros@gmail.com,rogeralmato,Roger,Almató Baucells,r.almato.baucells@gmail.com,JoseGamboa,José Umberto,Gamboa Sánchez,josegamboa.s.11@gmail.com
Pinscape,http://hackupc2017w.devpost.com/submissions/68831-pinscape,"Inspiration

We wanted to play around with Estimote proximity beacons, namely, doing a physical world quest where a person would use a smartphone to connect to beacons at a specific location and then proceed to the next riddle/level.

What it does

The app gives you a hint to the next location, where you are supposed to find a solution to the current level. When you enter the correct zone where the solution is located, you receive a notification to guide you to that solution.
When you find the level's solution you are being transferred to the next level. 

How we built it

We used Ionic framework to build both — android and web apps. 

Challenges we ran into


Zero knowledge of Ionic framework prior to that project. Relatively steep learning curve for angular (Ionic uses it). Complicated process of including simple javascript into the project.
After about 8 hours into the hackathon, we found out that Estimote beacons would not work and we had to come up with another option. That option was android app built with Ionic.


Accomplishments that we're proud of

Learned a lot about iBeacons and beacons in general. Quite fun thing! 

What's next for Pinscape

Catch some sleep and polish our skills in Angular and Ionic. 
",https://vimeo.com/206800487,https://github.com/pinscape/pinscape,,"","ionic, html, typescript, angular.js, geofencing","Universität Duisburg-Essen, Ain Shams","",Deleted695461,deleted,deleted,deleted+695461@devpost.com,"",1,alyanwarr,Aly,Anwar,alyanwarr@gmail.com
Vibes,http://hackupc2017w.devpost.com/submissions/68832-vibes,"Inspiration

Our main aim was to use AI with a social purpose. We wanted to get close to people in a simple way, so we thought that we could approach an AI utility to something as common as Twitter. 

What it does

It implements Everis AI ('everisMoriarty') to estimate the ""positivity"" or ""negativity"" of a certain Twitter user or hashtag, based on the lastest tweets he or she wrote or was mentioned at. We thought it was quite interesting to see the popularity and social acceptance of certain users, as well as harassing behaviours. Also, the most promising application which we have in mind is to study the positivity of different hashtags in order to see how the population reacts to it, this may be usefull when we are trying to search for good social policies . This extension has also great potential as we can restrict the search using Twitter's API with options like selecting especific localizations to make better fitting social policies in those places, selecting specific range of ages or languages to select smaller samples and therefore make more specific ""models"" for them . 

How we built it

We developed a Chrome extension for Twitter based on Javascript. The code uses the given API from Everis, the Twitter API, and other implementations specifical for extensions (Chrome Platform API's). We used the sentiment recognition from 'EverisMoriarty' implemented in javascript to get 'Vibes'

Challenges we ran into

We had serious trouble implementing the extension in Chrome due to lack of desired packages. We overcame this using the Browserify to implement everything in one Bundle. In addition, we had some issues due to the sentiment recognition of the Tweets as it was quite slow and if many Tweets were analized it wouldn't be a functional extension.

Also, we had serious trouble implementing a configuration menu for our extension. 

Accomplishments that we're proud of

We overcame many challenges during the building of this extension. We tried our best and, in general, we made what we wanted to do. We are proud of building a Chrome plug-in that is able to read Tweets from desired people or hashtags and then give a rating or ""vibe"". Also, we are very proud of doing so because we started this weekend with basic knowledge on javascript and it was the first time we were using any API. 

What we learned

We learned to implement an extension in Chrome using javascript. We learned to use javascript and html at a basic level. Also, we learned to modify an external 'html' with the implementation of the mentioned plug-in. Finally, we learned to use several API's in order to make more functional and try to extract the maximum profit of 'Vibes'.

What's next for Vibes

We are looking forward to implement a configuration menu to 'Vibes' in order to make more specific Tweet searchs to adress what we think might be a good way to extract data from the society in order to stop racism, online harassment and even to do more easy to make specific social policies that adress people in need for it. It can also be used to track the ""popularity"" of a certain Twitter user as a function of time and therefore with a big enough data set we could estimate which declarations have made the rest of Twitter to react the way the made.
",,https://github.com/david26694/HackUPC,,"EVERIS Challenge: Help people with AI, #HackHarassment, Best hack by Bloomberg",javascript,Autonomous University of Barcelona,"",davidmasip,david26694,Masip,david26694@hotmail.com,"",2,leonardogastongonzalez,Leonardo,González Gómez,leonardogaston.gonzalez@e-campus.uab.cat,tinocampos6,Martín Hernán,Campos Heredia,tino.campos6@gmail.com
EducApp,http://hackupc2017w.devpost.com/submissions/68833-educapp,"Inspiration

We knew from personal experience that children (especially those between the ages of 3 and 9) are extremely curious and like to ask ""What is this? And what is that?"" a lot. They're also very tech savvy, so we decided to create an app that would let them roam around the house and learn what everyday objects are called in a different language in an entertaining and engaging way.

What it does

The app comes up with a random object that is highly likely to be present in any household, and tells the kid (both by voice and on-screen) to look for said object. The kid needs to find that object in his house and take a photo of it. The app then analyzes the photo to determine if the kid found the right object or not and tells the kid to either try again or to look for a new object.

How we built it

We built a web server implemented in Django and hosted through ScalinGo that receives the photos taken from the app on the phone and processes them using Google's TensorFlow.

We used the Ionic framework to develop the mobile part of the application.

Challenges we ran into

Initially, it took us a bit of time to understand how to use TensorFlow and the logic (in general terms) behind it, as none of the members had prior experience with machine-learning.

Sending photos through HTTP Post requests to the web server as well as accesing the camera proved to be a little more complicated than anticipated using Ionic and some Cordova plugins.

Accomplishments that we're proud of

What we learned

We gained a pretty good understanding of the basics behind TensorFlow and image recognition through ML in general, and how to improve on the model we're currently using, as well as some hands on experience with a framework like Ionic.

What's next for EducApp

The next steps for the app will likely be:


Improve TensorFlow model by using more advanced techniques and transferring more appropiately sized photos.
Add generation of random object to be found.
Add option to determine type of locatin (house, park...) to determine set of searchable objects from which to randomly choose.
Add different language options.
Polish UI on both Android and iOS.

",,https://github.com/Urbistondo/hackupc-image_classifier,,"EVERIS Challenge: Help people with AI, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","javascript, css, python, html, typescript, ionic, django, angular.js, machine-learning, android, tensorflow","Universidad del País Vasco, Universidad de Deusto","",Urbistondo,Javier,Urbistondo,urbistondo.javier@gmail.com,Universidad de Deusto,3,danalex97,Alexandru,Dan,dan.alex97@yahoo.com,Iandrei96,Iandrei96,"",ii515@ic.ac.uk,egibar,Asier,Eguibar,aeguibar006@ikasle.ehu.eus
RescueMe,http://hackupc2017w.devpost.com/submissions/68834-rescueme,"Inspiration

We are four friends who enjoy outdoor activities (horse riding, climbing, hiking and adventure sports in general). When we do these activities we feel that in these situations we don't have any security system in order to assure our rescue in case of accident. Lot of times, we don't have phone signal for many hours. Taking this into account we decide to fill the gap =)

What it does

We have developed a solution that makes posible to find people in need (injured, lost...)  even in remote locations.

The next three situations sumaraize some of the use cases of our system:

-The needed person has internet connection available. so our device notifies to his/her contact person with the exact coordinates of it's location. Also it warns nearby users where is a person in need.

-If the needed person has no internet, but there is somebody nearby with our system. With rescueMe, anyone can be found whatever they have suffered from, wherever it is and what any adverse comunicative conditions they have.
Our system relies into several communicative ways of transmit information to rescue teams, for example, the Radio Frequency tecnology, GPS, GSM networks.. etc... also aplying some concepts of disrupted networks.

-In the worst case we can run into is the case in which someone has an accident in a zone without any kind of connectivity or near mates to help him. Our system will provide online the tracked path of the accidented person until the moment of connectivity loss. In conjuntion with the RF transponding capability of the system, it make as easy to find the person as follow the tracked path and listen to the RF transponder.

How we built it

RescueMe uses a huge variety of high end tecnologies:
-Android App's
-Arduino's and Expansion modules.
-FireBase database and servers.
-Google push notification system.
-High tech caffeine drinks =)
-...

RescueMe is a System which integrates hardware and sofware skills

Challenges we ran into

We don't have skills in all of the technologies and protocols that integrates RescueMe so, we have to learn a lot of things. One of the most difficult tasks we ran into is to solve the malfunction of hardware pieces and deal with their very restrictive limitations. Also we have some troubles with Bluetooth connection.

Accomplishments that we're proud of

To develop a functional system able to save lifes
To learn how to connect differents pieces in a non-homgeneous system
To improve teamworking
To resolve by ourserlves the challenges we find

What we learned

Using FIrebase system, develop Android apps, create Arduino embedded systems and integrate all of these

What's next for RescueMe

We want to build a better solution increasing the specs of the hardware used, adding a users authentication system, improving the ways to detect an accident, etc
",,https://github.com/JuanjoVG/RescueMe,,Between Challenge:  SmartLocation to save lives,"arduino, java, android, firebase, bluetooth, rf",University Politechnic of Catalonia * 4,"",sergiowalls,Sergio,Paredes,sergio.paredes25@gmail.com,"",3,Oneone1,Juan,Salmerón,jnssterrass@gmail.com,JuanjoVG,Juan José,Vázquez,juanjoinfoa@gmail.com,francesc_de_puig,Francesc,Guixe,francesc_de_puig@hotmail.com
Twin NP Pong,http://hackupc2017w.devpost.com/submissions/68835-twin-np-pong,"Inspiration

The PS Vita could have been one of the greatest handheld consoles ever. Despite the fact that it never sold quite well and had a hardcore niche, Sony made few efforts to manage this situation, and with the success of PS4, left the console in oblivion.

However, half a year ago some people managed to find a way to load homebrew onto the system, and the console gained a second life (Vita, in fact, means life in italian)

What it does

It simply plays pong. You control both players using the left and right stick.

How I built it

C, SDL, Sublime Text, my own PS Vita, pain and lots of time wasted.

Challenges I ran into

Damn SDL. At first I could draw a rectangle, only to realize it wasn't erasing them everytime I moved it. Fixed it, screen gives you epilepsy attacks. Fixed that, can't draw multiple rectangles at the same time. Couldn't load BMP files using both abs. and rel. paths. Lack of sleep and constant lethargy. And yet, I found somewhere how to draw 2+ rects, and started doing a pong to have something done. Made it harder than usual. Then went to sleep.

Accomplishments that I'm proud of

I'm proud of the fact that it simply works and that the main logic was made in just an hour. However, I started with few hours left until deadline, so I didn't have much to do... But I finished, so I'm proud of finishing on all 3 HackUPCs!

What I learned

That while Vita development is relatively easy (thanks to a community that actually cares about the console), but SDL isn't as easy as I thought. And that maybe I could prepare a bit better what I could do for another day!

What's next for Twin NP Pong

Maybe tinkering with some bugs, polishing difficulty and adding some nice extra aesthetics. Also, doing some slick menu and implementing some kind of restart/pause button
",,https://github.com/MNXANL/TwiNPong/,,FIB API Challenge,"c, sdl, pain",Universitat Politecnica de Catalunya,"",ExaltedRevenge,Miguel,Moreno,miguelmoregome@gmail.com,"",0
Lazying fun,http://hackupc2017w.devpost.com/submissions/68836-lazying-fun,"Inspiration

We have received some lasers from china that we bought a while ago and we already knew about pov led displays, so we wanted to try to reach further with lasers. We want to create screens that look like pen and we have also some ideas about holografic images with lasers.

What it does

It has a software capable of transform any image into a radial gray scale image. Then, this process image is taken as an input for arduino which project the image anywhere you like except your eyes (or other's).

How we built it

The software is just a script in java and we use matlab for testing it. In a 3D printer, we built the main structural parts and integrate the arduino nano setup and the lasers in it.

Challenges we ran into

Designing the 3D pieces. 3D printing functioning errors. Laser misalignment. Low mechanical stability of the setup.Shift registers not working, repeatedly,as expected. We didn't have everyhtning we needed.

Accomplishments that we're proud of

We made a tangible working prototipe. With it, we shine both in the bright and the dark side. And above all, it was fun.

What we learned

Improve our arduino skills and our image processing knoledge.

What's next for Lazying fun

Sleeping, because we're tired. Also getting a better motor and a more stable mechanical setup to be able to project the images steadily.
",https://www.youtube.com/watch?v=edU48DmhDiA&feature=youtu.be,,,ShapeWays Challenge: Best 3D printing hack,"arduino, java, matlab","UPC, UAB","",PDreamer,Alfonso,Martínez,alfonso.martinezc@e-campus.uab.cat,"",1,minusmagis,Martí,Gibert Roca,minu_10@hotmail.com
Lightspeed Study,http://hackupc2017w.devpost.com/submissions/68837-lightspeed-study,"Inspiration

It was a late night, during exams periods, it came to me. I had spent over the last three days reading a boring, far too long and far to unspecific, materials sciences book. I could have saved a lot of time if I had this tool.
From EducatedLobsters we think that no one should have to suffer through this painful experience.

What it does

Lightspeed Study does the work for you! Insted fo digging throug materials to find sensible information, Lightspeed Study summerizes whole papers and gives you the relevant information.
But that's just the bigining...

Would't it be awsome to know whether the information in a text can ansewer a certain question and, what is more, to know the actual response?
Well, Lightspeed Study does that for you too. You give it a text and a set of questions and the tool answers the questions the best as possible with the given data, or does not answer if the answer can't be found. 

If you don't want any questions answered, you still can summarize any document you want to.

How we built it

First of all, we use a tesseract based algorithm to transform .pdf files to .txt.
Next we use a natural language processing algorithm to analyze the input text and train which are the main concepts of the theory text sentence by sentence. This training is done transforming the text to the vector space and analyzing it acording to a modyfied (personalized) version of the term frequency * inverse document frequency (Tf-Idf algorithm) and Latent Semantic Indexing (LSI). When a questions text is intruduced too, the meaning of the questions is compared with the different parts of the text in order to dilucidates which part of the text answers each of the given questions properly (if possible). 
With this, we can generate a .txt file including:


A brief summary, of a length of about one third of the original. This summary is obtained thanks to LexRank: a Graph-based Lexical Centrality as Salience in text summarization method.
Then each question is answered with the parts of the text that are considered to better respond the questions (under certain criterions). If a question can't be answered you will be told in the output document.
In the end we convert the .txt file to .pdf using the unoconv utility and output it.
The whole system is hosted in AWS. We used a .tech domain.


Challenges we ran into

Uploading files to the server was a major challenge. Data type conversions weren't always easy. 
Finding a way to define a semantic relation between words required a lot of prior learning (hours of Google).

Accomplishments that we're proud of

It way better than expected. Drag and Drop.

What we learned

To use AWS, to use the NLTK.
",,http://www.lightspeedstudy.tech,,"EVERIS Challenge: Help people with AI, Best .tech domain, Best hack by Bloomberg, Amazon Web Services - Best Use of AWS","tesseract, natural-language-processing, flask, python, machine-learning, amazon-web-services, .tech, nltk, unoconv, textract, gensim, wordnet",Universitat Politècnica de Catalunya,"",JMarcoRimmek,Joan,Marco Rimmek,jmarcorimmek@gmail.com,"",3,Oleguer,Oleguer,Canal,oleguer.canal@hotmail.com,ABarjaRomero,Adrià,Barja Romero,adribarja@gmail.com,isaacmontsech,Isaac,Montsech,isaacmontsech@gmail.com
MISPLACED,http://hackupc2017w.devpost.com/submissions/68838-misplaced,"Inspiration

Fun, Learning & Mazes!

What it does

Interestig

How we built it

With Unity

Challenges we ran into

Deploying to Android

Accomplishments that we're proud

Gaphicaly very pleasing. All of them, it's our baby.

What we learned

Unity and C#

What's next for MISPLACED

Levels, poweups, multiplatform....... microtransactions?
",https://www.youtube.com/watch?v=houtCz-nQb4&feature=youtu.be,https://github.com/Gistonic/Misplaced,,"","unity, c#",FIB,"",giselaruzafamado,Gisela,,giselaruzafamado@gmail.com,"",2,CRojasD,Carles,Rojas,carlesrojas@hotmail.com,Compilation,Jaume,Ballester,jballesterpuig@gmail.com
Air-Piano,http://hackupc2017w.devpost.com/submissions/68839-air-piano,"Air-Piano

Our Air Piano is the first approach to the idea that we call the ""universal instrument"" (a device that let the users play the music that they want without learning every time how to play any new instrument). 

Our system is based on LeapMotion (link), which is monitoring the user hands all the time. Every time that the user bends one of his fingers (or some of them at the same time) the LeapMotion receives the change and plays the musical note associated to the finger (it not have to be a piano note, it could be any sound). In addition, combined that the fact that different heights means different musical scales transforms the LeapMotion in something versatile, intuitive and easy to play for the user.
",,https://github.com/ferranmafe/Air-Piano,,"","html, c++, javascript, c, css, python, objective-c, objective-c++, java, c#, makefile",Universitat Politècnica de Catalunya,Leap Motion,ferranmafe,Ferran,Martínez,ferran.mafe@gmail.com,"",0
besafe-app,http://hackupc2017w.devpost.com/submissions/68840-besafe-app,"
  


BeSafe App

BeSafe, the app that will secure your walks anywhere you go.

Simply introduce where you go, and the email of the person you want to notify if you get far of your way.

Inspiration

The number of cases of abductions, disappearances and abuses that have been happening lately has made me value a tool like this to try to help these people to get out of these situations.

What it does

It is a mobile app that warns your friends and family if you get far of your way without warn. It will include a pannic button too and more functionalities.

How I built it

I built it using Ionic 2 and Google Maps APIs.

Challenges I ran into

I started doing a project with another teammate, but the circumstances did that I leave the project and start anotherone with less hours left. I had never worked with Ionic, Angular, and Google APIs, so I got in a lot of problems while developing the app.

Accomplishments that I'm proud of

I got a semi finished hybrid app developed with Ionic, and I learnt to develope with Angular 2.

What I learned

Ionic 2, Angular 2, Google Maps APIs

What's next for besafe-app

I will add a panic button, different ways to warn different people about the movements far of the way and a better design and user experience, including saved preferences.
",,https://github.com/Reynau/besafe-app/raw/master/besafe.apk,,Between Challenge:  SmartLocation to save lives,"typescript, css, html, javascript",FIB,"",Reynau,Xavi,Lopez,xavi.lopez.reynau@gmail.com,"",0
Cortiris,http://hackupc2017w.devpost.com/submissions/68841-cortiris,"Inspiration

Our project was inspired by other Assistants in the market like Siri, Cortana and Google assistant, and we decided we would try to make a similar one.

What it does

Cortiris helps you to organize your calendar, allowing to add events and check if you have any on a given day. 
It can also make simple mathematical operations (+,-,*,/), understand some orders and have a small conversation with you.

How we built it

We built Cortiris using small functions that will evaluate your decisions and make Cortiris ask you specific questions.

Challenges we ran into

We have little to no experience in this field, so challenges we ran into were huge, specially when we tried to make it understand what the user was writing.

Accomplishments that we're proud of

We ended up with a pretty nice range of answers that we think will be enough for this Demo.

What we learned

We learned a lot about text analysis, to help Cortiris understand what we are telling it.

What's next for Cortiris

We are planning on improving Cortiris by adding an interface, as well as Voice recognition.
We also want to give it acces to other companies API to be able to integrate more functions to it like, for example, connecting it to Netflix, Google Calendar, your frigde, etc
",,,,EVERIS Challenge: Help people with AI,"python, conditionals, coffee",Universitat de Barcelona,"",Ralleg314,Ralleg314,"",ralleg314@gmail.com,"",2,MSBeatles,Marc,Soler,kamehamemarc@gmail.com,oelt16,Oscar,Lima,oscar_bozz@hotmail.com
Dubzooka,http://hackupc2017w.devpost.com/submissions/68842-dubzooka,"Dubzooka

Dubzooka

Introduction
Experiments with parametric and directional speaker systems have been going on since the early 1960s. Ultrasonic sound has much smaller wavelengths than regular audible sound making it much more directional than a traditional loudspeaker system.

Most speakers are designed to throw sound as far and loud as possible. Parametric speakers are more like a laser beam with the sound focused at high intensity into a relatively small area.  The result is that two people can be standing only a few feet apart from each other yet only one of them will hear the directional audio waves emanating from the parametric audio source.

Our project is based on a directional speaker design. The inspiration came from a popular and crazy video game called Saints Row IV. One of the weapons used in is the dubstep gun, which its purpose is to point a determined person and make them dance listening dubstep music. In our scenario, it is desired to design a crazy gun, which its purpose is to point a person and only make him listen that music.

We built it with SMT microprocessor, H-bridge's, rescued components from old PCB's and ones we acquire to play with. For us was the first time doing a project of audio like this, during the development of the Dubzooka the challenge of learning about amplifiers for audio, burning them because of little mistake in current handling (like 24 volts for 2 ohms load, a bit of 12 AMPERES!!!!!), but with that experience we now know what to consider in future designs of audio projects.

For us, Kevin and Carlos, was our first Hackaton, we go and to think and develop a working prototype in 36 hours was rushing in adrenaline and excite.

Any further improvements like a good sound filtering to hear more clear the sound from the ultrasonic speakers and adding for of them to have more sound, we post it here, stay in contact.
",https://youtu.be/Q61AAI_XCdU,,,"","electronics, smt-micro, audio, c, power-electronics, amplifier","Universidad de Carabobo, Universidad Politécnica de Catalunya, Universidad Politécnica de Cartagena","",KevinSaccoGhini,Kevin,Sacco Ghini,ksacco@gmail.com,"",3,Quorth,Santi,CP,santi.nieve@gmail.com,danielrodriguezdominguez,Daniel,Rodríguez,daniel.rodriguez.dominguez@alu-etsetb.upc.edu,Carlos_March,Carlos,March,carlosmarchmartinez@gmail.com
aimalaif,http://hackupc2017w.devpost.com/submissions/68843-aimalaif,"Inspiration

Provide a solution to people and to public emergency services to analyze in realtime whats happening in a catastrophe.

What it does

Realtime GPS tracking of the victims. Persons finder, you can search in our database to know if there is information of somebody and see the last registered location. A chat to connect emergency services with victims. Realtime announcements about the catastrophe and a web page for the emergency agents to see in realtime in what areas are the majority of victims. Through the web page, emergency agents also can send chat requests with the people that are in the place.

How we built it

Nodejs, Sockets.IO, Swift, Javascript, AngularIO, MongoDB, Express, HTML5, CSS, nginx

Challenges we ran into

Deploy a solution to handle millions of connections in realtime.

Accomplishments that we're proud of

Realtime GPS tracking. Register information about victims and people near the user. Search for registered people. See realtime people location and last location.

What we learned

NodeJS, Socket.io
",,https://github.com/markferreiro/aiamalaif,,Between Challenge:  SmartLocation to save lives,"node.js, swift, angular.js, mongodb, javascript, html5, css, angulario, nginx",FIB,"",OriolOMM,Oriol,Marí,ury@hotmail.es,"",1,Sustrak,Josep,Sans,josepsansprats@gmail.com
EventLift,http://hackupc2017w.devpost.com/submissions/68844-eventlift,"Inspiration

Multiple times we have wanted to attend an event, but had no way to reach it. For every one of these times, someone had one empty spot in their car. Connecting people attending the same event allows them to share the road, cut the costs and enjoy the ride with like-minded people.

What it does

EventLift is at its core an event manager - people create events and share them with others. What distinguishes it from other event managers is the ability to create lifts - car rides that can be shared with others. Members are able to join those lifts, cutting costs and getting to know people attending the same event.

How we built it

We built the backend in Flask, using sqlite3 for the database. The front-end uses jinja2 as its templating engine, and we used Bootstrap framework to provide a responsive website.

Challenges we ran into

As most of the team had never worked with Python or Flask before, there were some difficulties relative to the lack of experience. Working with Bootstrap was also new to the majority of the team, which required some adjusting period as well. 

Accomplishments that we're proud of

Having a ""finished"" working product, a MVP, was a goal of ours since the beginning and being able to achieve it feels very satisfying to all of us. The ability to adapt to the new technologies in such short time period is also something we are quite proud of, as we have been able to get the project working, even if not following every good practice.

What we learned

Besides the technical skills related to the used technologies (in which we had virtually no experience), we also learned a lot about project management skills, working as a team under a tight schedule. 

What's next for EventLift

Making it a safer website, adding security measures, would be the next step. In order to implement an MVP with the core functionalities, this part didn't get as much attention.
",,https://github.com/JJPO96/eventLift,,"","python, flask, jinja, sqlite, html5, css3, html, css, javascript, bootstrap",Faculty of Engineering of the University of Porto,"",DiogoMCampos,Diogo,Campos,d.diogocampos@gmail.com,"",3,Caramelo18,Fábio,Caramelo,fabiocaramelo18@gmail.com,JJPO96,José,Oliveira,jose.j.p.oliveira.96@gmail.com,BSantos22,Bruno,Santos,bruno.santos1996@gmail.com
SmartFood,http://hackupc2017w.devpost.com/submissions/68845-smartfood,"Inspiration

We were waiting for the waiter in a restaurant the day before to the hackathon and it came to our minds... How could we ease and speed up the process of taking the orders? Taking them from our smartphones!

What it does (or it will do)

SmartFood is an Android App (under construction) that allows you not just to make your order previously to your arrival to the restaurant, but also checking if your favorite table is available! The core of the App is the pre-order so you do not have to wait for the waiter, but among other features you will find:
-Restaurant navigation: look for your restaurant and navigate through their menu.
-Check what tables are available and choose one.
-Make your order so the restaurant can prepare it at your desired time. Also add anything you want while you are eating.
-Show all the info about the dishes: ingredients, allergens, etc.
-History of your most visited restaurants and favorite dishes.
-Share the bill with your friends if they are using the App too.
-Rating of the dishes.
-User-friendly interface.
To start navigating, just tap in the icon in the center of the main screen (see attached image).

How we built it

We decided to go for Android (and use Android-Studio). We had never used this software before but we were sure it would be the most attractive option for the customer.
Moreover, we used Hostinger to set our App database with information about restaurants, dishes, customers, etc.

Challenges we ran into

Most of our time was spent trying to get familiar with the Android Studio environment, which was completely new to us. We lost a lot of time with beginners' mistakes. Also, we first tried to use Scalingo's resources but we were unable to connect (and the staff was not very helful/available at crucial hours). 

Accomplishments that we're proud of

During the last 36h we started an app from scratch with no prior knowledge of Android developing, Android Studio or Java. Eventhough we did not fulfill all our objectives
(we were far too optimistic at first glance) we have setteled a solid base that can help us implememt the remaining functionalities of the app.
We are proud of the huge progress we accomplished in so little time, as well as the amazingly collavorative atmosphere that we created within the team.

What we learned

We learned a lot about Android and database managing. It was our first time in a hackathon so the experience was really enlightening.
We also learned how time consuming and intricate Android developing can be, even starting from an idea that at first seemed ""straightforward"".

What's next for SmartFood

First, we need to finish all the features and redesign the style of the App (we had troubles so we did not have enough time to do that). 
Also, we want to integrate Estimote Beacons with our App so the restaurant can perform a live tracing of your gastronomic experience.
",,https://github.com/lascavana/SmartFood,,"","android, android-studio","UPC, KTH (Stockholm), IES San Vicente","",alvarogomezinesta,Álvaro,Gómez Iñesta,alvarogomezinesta@gmail.com,"",1,lascavana,Lara,Scavuzzo,lascavuzzo@gmail.com
projectNSA,http://hackupc2017w.devpost.com/submissions/68846-projectnsa,"Inspiration

We want to make some software to prototype and show the potential and dangerous of using internet in a narcissist and exhibitionist way. We focused on the twitter generated data.


what is a panopticon? https://en.wikipedia.org/wiki/Panopticon
what is NSA? https://en.wikipedia.org/wiki/National_Security_Agency


What it does

Is a server backend, that is getting all the tweets containing a concrete set of words, in real time. And saves the tweets to a MongoDB database, and sents to a frontend client (with socketio).
The server, gets:


the tweets containing images, the server analyzes the images, and gets the faces from the people. We store all the faces from each person that is on a tweet related to the words we are tracking
also, the server can act as a twitter bot, and replies the tweet of the people, saying thanks for their faces, and with an image of them faces marked inside a square.
for each tweet, analyses the sentiment, so the tweet gets a punctuation value in function its positive or negative sentiment --> that's to know the average opinion on a concrete topic
all tweets with geolocation activated, and the frontend paints over a map in realtime the new tweets
in the frontend, can view the tweets map, the faces of the images, and a node network map to analyse the relations between users and tweets sent.


How we built it

Backend server:


opencv: for images analysis and faces manipulation and extraction.
nodejs: the backend is written in nodejs
mongodb: database where we store all the data
sentiment: npm package to analyse sentiment of a string, in our case of a tweet
twitter api: to get the data, and post the replies of the bot
socketio: to comunicate in realtime with the frontend client.


frontend:


angularjs: the logic
socketio: realtime communication with th server
visjs: for the nodes network map
google maps

",https://www.youtube.com/watch?v=Bwd-WbcFZj4,,,"","javascript, angular.js, node.js, electron, mongodb, socket.io, opencv, twitter",UPC EETAC,"",arnaucode,arnau,code,idoctnef@openmailbox.org,"",1,lima9,Max,Max,max9@openmailbox.org
On the Street,http://hackupc2017w.devpost.com/submissions/68847-on-the-street,"Inspiration

Have you ever seen a street performer you liked but did not have the chance to show your appreciation? 
Here is your chance to not leave this people forgotten.

What it does

You can find, message and donate to the street performers. There is also an ad platform where collaboration between performers or employers and performers is encouraged.

How we built it

With love and AngularJS. We used a free template as base and we adapted it for our own idea.

Challenges we ran into

Code didn't work sometimes. 

Accomplishments that we're proud of

2 team members randomly left us. Lack of sleep. Still got it

What we learned

I learned how to code in HTML and my colleague learned that sleep is for the weak.

What's next for On the Street

Mobile app is work in progress.
",,https://github.com/HackUPCIdeas,,"","node.js, angular.js","University of Edinburgh, Universitat Oberta de Catalunya","",eloimuns,Eloi,Carracedo,eloimuns@gmail.com,"",1,bibsss13,Bianca,Burtoiu,bibsss13@gmail.com
Awhere,http://hackupc2017w.devpost.com/submissions/68848-awhere,"Inspiration

In such a busy environment nowadays, no-one wants to waste more time on mobile phone or computers.
However, these are getting insanely powerful, having already become an extension to our life. 
Taking this into consideration, we've decided to add a little more usefulness to carrying a mobile phone with you - by making you more A-WHERE of the surroundings.

What it does

Awhere will make sure to notify you in scenarios that might be of interest.
You might be suffering for a lung disease - awhere will notify you about air quality near you once it gets too bad.
Is your skin sensitive ? - No problemo, awhere will tell you when you should stay indoors

We wanted to make this app as little time consuming as possible.

Therefore you just need to:


open it
select the scenarios that fit you
forget about it, all work will be done in the background


Challenges we ran into


being able to finish the project in two people. However, it all went great and we're happy with the result
CORDOVA - super useful, but a pain when working with plugins (especially those not constantly updated) 
signing iOS applications... to be able to run it on a physical device (literally 3 hours spent on this)


Accomplishments that we're proud of


made background geolocation work in cordova
handling notifications in cordova
actually finishing this project that relies heavily on native phone stuff, yet in full javascript


What we learned


using a wide range of tools and debugging properly - building tools/emulators for android and iOS/ cordova / webpack
how to get a MVP done and not focus on small features


What's next for Awhere


[ ] predict traffic (not yet implemented even though in appears in the view)
[ ] bad weather conditions (idem)
[ ] Throttling notifications
[ ] Scheduler for notifications
[ ] More API exploitation
[ ] Smart notifications (ML)

",,https://github.com/Loopiezlol/awhere-upc,,"Between Challenge:  SmartLocation to save lives, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","javascript, react, reflux, webpack, apache, node.js, scalingo",King's College London,"",Loopiezlol,Cătălin,Buruiană,catalin@enki.com,"",1,sebaraba,Sebastian,Raba,rabasebastians@gmail.com
Alife,http://hackupc2017w.devpost.com/submissions/68849-alife,"What it does

Save lifes thanks to the GPS location and the new technologies available.

How we built it

We have built an iOS application in which the user can notify in case he is injured, specifying the level of the damage. We also have built an single page application in which the administrators can manage all the emergencies and maintain a chat with the injured.
All that is possible thanks to an API that we have developed in SparkJava and Firebase, which is in real time.

Challenges we ran into

Between challenge.

Accomplishments that we're proud of

We are proud to have worked like a team to develop a full platform to manage emergencies. We are also proud to have a good API that allows us to interact from two different frontend clients, iOS & Web Application.

What we learned

In that hackathon we had teammates that was their first experience in a hackathon. Even that we have very different roles, some knows so much about iOS development and other ones on website or APIs and it was an amazing experience share all theses knowledges and meet new people from other countries.

What's next for Alife

We were so interested about the project and we would like to keep working on them together!
",,https://github.com/limiaspasdaniel/HackUPCBackend,,Between Challenge:  SmartLocation to save lives,"java, javascript, bootstrap, angular.js, particle, ios, firebase",FIB,"",sufian22,Sufian,Ben Bouker,sufian.bb@hotmail.com,Universitat Politecnica de Catalunya,1,eironeia,Alex,Eironeia,acuellor.6@gmail.com
Runner,http://hackupc2017w.devpost.com/submissions/68850-runner,"Inspiration

This game is inspired by hackers running through the university halls in the HackUPC.

What it does

Endure the maximum possible time avoiding certain obstacles

How we built it

Through documentation on the Internet and learning Unity.

Challenges we ran into

We had no knowledge about Unity

Accomplishments that we're proud of

First game with Unity for Android

What we learned

You have learned how to create a multiplatform game with Unity

What's next for Runner

Update it with graphic content of its own, fix the bugs and improve the gameplay.
",,https://www.dropbox.com/s/a3xkf1bc23uto2t/run.apk?dl=0,,"","unity, c#",Universitat Politecnica de Catalunya,"",XiaoleiLin,XiaoleiLin,"",er_lin94@hotmail.com,"",0
Orus: An easy and fast way to keep you updated,http://hackupc2017w.devpost.com/submissions/68851-orus-an-easy-and-fast-way-to-keep-you-updated,"Inspiration

It is particullarly necessary for us Hackers to keep track of the new tendencies that appear every day.
Unfortunatelly due to our jobs and live routines it is not always easy to accomplish this task.
Is due to this circumstances that the idea of Orus was born

What it does

Orus is a facebook chat bot wich, after collecting data from your favourite websites, is able to analyze it, present you with a sorted list of the most popular subjects that are being mentioned and, on you demand, show you a summary of what is beig said about them. 

How we built it

Most part of the code is based on Python but we have used different frameworks and libraries such as flask and pyelasticsearch. We have used an elasticsearch database in order to build an efficient and fast data accessing system, we have also made use of open source and personal algorithms in order to collect and analyze the data. 

Challenges we ran into

We attempted, and eventualy succeded, to use an api to analyze the positive or negative correlation linked to the subjects commented on the analyzed data. Unfortunatelly we found that the language used in all the studied texts wast too formal and objective as to classify like positive or negative and turned out to be mostly neutral. Therefore we decided to not implement this option considering it redundant and not user friendly.

Accomplishments that we're proud of

We were able to accomplish our primary goal that being the data segmentation and summarization of freely accessible data and finally the presentation of this compactified data to the user.
We are convinced on the usefullness of our project and we consider it to be helpfull for a very wide range of people, not to mention that it is very user friendly. 

What we learned

We learned to use flask, facebook chat API, webpage data collection and various algorithms for data anlysis. We also confirmed that by working in an addecuate ambient such as the one we where able to find in HackUPC one can not only learn and work in a faster and more effecient way but have fun while doing it.

What's next for Orus: Easy and fast way to keep you updated

Expand the number of webpages Orus can access to. Allow the user to decide what webpages Orus should extract information from. Allow the user to ask Orus to send to send automatically new information when updated. Implement all suggestions that the users should find interesting and send us through our suggestions box. 
",,https://www.facebook.com/Our_hack_upc_2017-1817998805189292/?fref=ts,,"EVERIS Challenge: Help people with AI, Best hack by Bloomberg","python, flask, api, facebook-chat, ia, ai",UAB UPC,"",Joaquimdcp,Joaquim,De la Cruz Pagà,joaquimdcp@gmail.com,"",1,marcfusterr,Marc,Fuster,marcfusterr@gmail.com
Time Travelers,http://hackupc2017w.devpost.com/submissions/68852-time-travelers,"Inspiration

We wanted to make a game for the Samsung Gear VR as one member has recently adquired one.

What it does

It's a VR FPS game that consists in shooting enemy bullets to avoid being defeated. 

How we built it

We have used the Unity game engine

Challenges we ran into

At first we had some problems communicating Unity with the VR headset. We also found some problems with the in-game camera

Accomplishments that we're proud of

Making a VR game in 36h

What we learned

VR games are awesome, it's needed some experience with the hardware.

What's next for Time Travelers
",,https://github.com/AleixBV/Time_Travelers,,"","unity, c#, samsung-gear, vr","Universitat Rovira i Virgili, UPC",Samsung Gear VR,Josep0704,Josep, Sugrañes Riera,josep2452@gmail.com,"",2,AleixBV,Aleix,Borrell,aleixborrellvives@gmail.com,danielzarco,Daniel,Zarco,dazarco96@gmail.com
Harambot,http://hackupc2017w.devpost.com/submissions/68853-harambot,"harambot

Simple harassment detector bot for Facebook -- Developed at HackUPC Winter 2017

Within the code of conduct of MLH there is a section that is highlighted whenever there is a hackathon: the fight against harassment. Taking into account this problem, a program that could detect this conduct would be a great improve and help for moderators.

Due to these requirements, we have developed harambot, a monitoring application that detects online harassment towards other users. Although this technology can be implemented multiple platforms (twitter, slack ...) we have focused on using facebook.

The main objectives about this project are two:


Detect harassment in online chats
Filter and self-learning about potentially harmful messages and achieve more accuracy


The operation of the program is simple: first, all the comments of a facebook group are analyzed by the Go language and saved in a database. Then, through Everis API, the data are treated to classify them into harassment or potentially harassment, and are re-stored in the database. The results obtained are displayed on a graphical interface (GUI) where a moderator will finish manually filtering offensive comments.

Although the results have been quite good, we would like to implement an artificial intelligence to improve the results. We've tried to develop it but it didn't work very well, so we had to readjust the program's functionality. In this terms, the application can only identify partially if the comment is good or bad.

In conclusion, the program could be a great solution if improves. As a team we are very proud of our job because we are conformed by an informatics, telecom and chemist students and not everyone is familiar with the code programmed. It's been a great way to learn and improve our knowledge.
",,https://github.com/jsmont/harambot,,"EVERIS Challenge: Help people with AI, #HackHarassment, Scalingo Challenge: The coolest Hack Hosted on Scalingo","golang, html5, javascript, jquery, css, python",Universitat Politècnica de Catalunya and Universitat Rovira i Virgili,"",Procyon23,Carles,Sunyol,carles.sunyol@gmail.com,"",3,Gilbertomy,Jordi,Solà Montserrat,jsmont.sol@gmail.com,nixiescream,Nixie,Skywalker,nyxscream@gmail.com,rogerbaiget,Roger,Baiget Dolcet,roger.baiget@gmail.com
TeamHack,http://hackupc2017w.devpost.com/submissions/68854-teamhack,"Inspiration

We were aiming for an easy solution to avoid stress organizing teams. We felt that an easy tool to send links, share code and save text was perfect, so we built TeamHack.

What it does

This tool helps you, and your team to manage your work, allowing you to have collaborative channels to share code, send text and organize your work.

How we built it

We built TeamHack with node.js, using express as the web-server, and firebase as the database. We also used firepad to manage collaborative rooms and socket.io to make things easier for the user.

Challenges we ran into

We ran into some problems while trying to connect the backend and the frontend aswell as for managing more than two files.

Accomplishments that we're proud of

We are proud to have developed an almost fully working tool which we think can be useful for fast and easy collaborating online. 

What we learned

We learned a lot about backend services, such as Socket.io and Firebase. On the frontend we learned much about jQuery and some advanced html.

What's next for TeamHack

We think our tool can become something very complete. Voice support or file importing could make it  a way more useful tool.
",,https://github.com/bernatixer/TeamHack,,Scalingo Challenge: The coolest Hack Hosted on Scalingo,"node.js, socket.io, express.js, firebase, firepad",Universitat Politècnica de Catalunya,"",bernatixer,Bernat,Torres,bernat.torres.bellido@gmail.com,"",2,Holmez,Martí,Homs Soler,martihomssoler@gmail.com,arnaubt,Arnau,Buch,arnaubt@gmail.com
FiY - Find it Yourself,http://hackupc2017w.devpost.com/submissions/68855-fiy-find-it-yourself,"Inspiration

IoT and change the way you shop
Our inspiration comes from the idea of a market where the shopping process is easier thanks to the IoT. 

What it does

Our app is map based. What does it mean? Supermarkets and shops have their business mapped and the shopper can know where a product is without knowing the place. You just search what you want and a map of the place will show the location of this product. Imagine that you go to a store like ""Pull and Bear"" and you previously saw a jacket on his website. You only have to open the app, search the jacket you want and it will show where it is. On supermarkets where you have a bigger area we thought into the creation of a smart shopping cart equipped with an Intel Edison board. That cart uses WiFi networks to triangulate your ubicación with a precision of +- 1m and connects to the costumer phone trough Bluetooth. That cart also can suggest the fastest way to go shopping based on a list of products you want using AI.

How we built it

We build that APP with Android Studio, Intel Edison and using Scalingo for the server side.

Challenges we ran into

We all 4 are noobs on Android Studio and this is our first App. Also, we never done a server side from an app.  

Accomplishments that we're proud of

We're proud of having a working app due to our Android programming level and have been implemented on it's 90% the Intel Edison triangulation system.

What we learned

We learned to work with Android Studio, the server side of the application and new ways of programming, like flask.

What's next for FiY - Find it Yourself

Find it Yourself can be considered now like a beta version. Weak graphics and interface but all can be improved with work. The connectivity between the phone and the shopping cart, and the AI for the optimal movement inside the store are hard points to work into.
",,https://bitbucket.org/Guillem_1392627/hack-upc-17/src,,"Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","android-studio, javascript, python, xml, arduino, flask, json, scalingo",Universidad Autónoma de Barcelona,Intel Edison,oriolmartinezag,Oriol,Martínez ,oriol.martinez.ag@icloud.com,"",1,Nosferatuu,Guillem,Nosferatu,guillirei@gmail.com
Room condition sensors that help to sleep better,http://hackupc2017w.devpost.com/submissions/68856-room-condition-sensors-that-help-to-sleep-better,"Inspiration

https://github.com/rimskiynikita/sleep_conditions
git@scalingo.com:sleep-more.git

What it does

Our product is a device that tracks room conditions and help people maintain them on the good level for sleep.

How we built it

It consists of Arduino and several sensors such as temperature, humidity, noise and light ones. It constantly tracks the room conditions and sends this data to the user’s mobile application.
Mobile applications shows all data to users and help them to improve it.

Challenges we ran into

Scalingo Challenge
Best Domain.com domain

Accomplishments that we're proud of

Real-time data in mobile application

What we learned

Working with Arduino technology

What's next for Room condition sensors that help to sleep better

Integration with sleep trackers and machine learning to make individual recommendation
",,http://sleep-more.com,,"Best Domain Name from Domain.com, Scalingo Challenge: The coolest Hack Hosted on Scalingo","arduino, swift, python, django, c++, sketch, mongodb",Higher School of Economics,"",kate__p,Ekaterina,Podolskaia,kate__p@mail.ru,"",2,avscherbakov,Anton,Shcherbakov,anton@scherbakov.top,rimskiynikita,Nikita,Rimskiy,rimskiy.nikita@gmail.com
Cookitapp(v1.0),http://hackupc2017w.devpost.com/submissions/68857-cookitapp-v1-0,"Inspiration

We wanted to create an app which would combine the searching resources that an API would provide us with optimal preference-based filter algorithms using artificial intelligence. Moreover, we wanted to extend it to a ""social network"" where you could share your receipts with your friends.

What it does

You can register as a user and you can look for 5 receipts thanks to the API, with an explanation for each one. The whole display is for an Android app.

How I built it

We used Android Studio as framework, Java as programming language.

Challenges I ran into

We started as a web service and we found the need to go to a mobile phone app. How could we deal with complex API responses. Involving artificial intelligence in the algorithms.

Accomplishments that I'm proud of

Getting a succesful API response and dealing with the data. Managing to obtain a decent layout for the Android app.

What I learned

We have deeply improved on Android Studio, as well as dealing with though APIs. More Java programming as well.

What's next for Cookitapp(v1.0)

It can go much much bigger but it needs more time. We will see...
",,https://github.com/CookitApp/CookitApp,,"","java, android-studio, api22",Universitat Autònoma de Barcelona,"",arnauochoa,Arnau,Ochoa,arnau.ochoa@gmail.com,"",0
rePebble,http://hackupc2017w.devpost.com/submissions/68858-repebble,"Inspiration

We are frequent users of reddit platform and we enjoy reading some jokes or stories every time we have a free minute. Pebble smartwatch is a perfect hardware platform to integrate reader client, because it's small, it's always with you, and you don't need to pull out your phone often.

What it does

It shows hot topics from selected subreddits in text mode on Pebble watch, so you can enjoy jokes, news and stories from around the world anytime. 

How we built it

We used PebbleKitJS framework to fetch Reddit API, transform and map it and later display it in convenient format on Pebble Watch.

Challenges we ran into

Reddit does provide extensible API to fetch posts in JSON format, however it lacks comprehensive guidelines and docs, so tinkering around it was rather challenging. Also, reddit API lacks some features we would be interested in, so we needed to implement it on our own. To be more specific - you can't select only text posts from subreddit, so we implemented gradual data load&filter via multiple API calls. Another thing that raised some troubles was understanding how code runs, because javascript is executed on a ""JerryScript"" platform, which differs from NodeJS and Web platforms slightly.

Accomplishments that we're proud of

We made multi-feature, easy-to-use reddit client for smartwatches without even touching smartwatches before. Exploring new platform is always fun, however when everything works as expected it's a delightful feeling. 

What we learned

CloudPebble, Pebble watch and PebbleKitJS platform, public reddit API, JerryScript (which we will use later, because it is suitable for IOT). Also, a little bit of python.

What's next for rePebble

Image viewing from your pebble watch, reading comments, opening post on your phone, saving posts to favourites, adding your own subs.
",,https://github.com/minajevs/HackUPC2017,,"","javascript, pebble, pebblekitjs",Riga Technical University,Pebble Time,Minajevs,Dmitrijs,Minajevs,d3x133@gmail.com,Riga Technical University,1,parkourtrane,Artur,Paklin,parkourtrane@gmail.com
FeelShare,http://hackupc2017w.devpost.com/submissions/68859-feelshare,"Inspiration

After seeing the capabilities of the new Microsoft cognitive services API, we thought that build an app with this technology could be a good idea and so we decided to do an App with react native that uses the emotions API exposed by Microsoft .

What it does

Allows the user to easy login into the app, take a selfie, receive score about their smile with the help of the Microsoft API and share it with the other users .

How we built it

We have build the App with Exponent, a set of tools on top of React Native that allows native developments (iOS/android) using JavaScript . 

Challenges we ran into

-Organize all the task we need to do as a team to finish the App
-The use of new technologies for us such as Firebase Storage
-Code organization in short time
-Combine the different APIs together

Accomplishments that we're proud of

To have a functional application that do what we intended to do in the mockups

What we learned

We learnt:
-Firebase Storage
-React navigation library
-Working as a team to accomplish the goal


Combine the multiple APIs used by the project 


What's next for FeelShare

We'll love to make this app multiplatform ( currently only run on iOS ) and apart from that we intent to add social features like ""share on Facebook"" and publish it in the different stores...
",https://www.youtube.com/watch?v=QSO79XOEIh8,https://github.com/gerardreches/feelsnap-exponent,,"","javascript, react-native, exponent, redux, react-navigation","UVIC, UOC","",aerox,Eric,Ruiz Franco,aerox.javascript@hotmail.com,Universidad Internacional de La Rioja,3,kidnor,kidnor,Vila,vjordi10@gmail.com,Cabrera13,Josep,Sanchez,jssdlcu1331@gmail.com,gerardreches,Gerard,Reches,gerardreches@gmail.com
Pear,http://hackupc2017w.devpost.com/submissions/68860-pear,"Inspiration

We wanted to know exactly where our money goes when we donate to charity, so we designed a transparent platform where people can directly fund specific causes, and to avoid the inherent corruption with conventional charity by removing the middle-man. 

What it does

Our solution creates a market for contractors to meet local needs through third party funders. Each funder takes an active role in deciding which contractor gets the job, and each beneficiary can vote on which contractor they believe provides the best solution. 

How we built it

We used a Javascript tech stack, with Node.js (with Express and MongoDB) in the backend and AngularJS in the frontend. 

Challenges we ran into

Probably the greatest challenge was balancing the amount of frontend work necessary to demonstrate, with the amount of backend work.

Accomplishments that we're proud of

We think we've used our programming skills to make a meaningful human impact, and we all learnt a lot from the experience. We did not have years of experience with this technology stack so it was a very rewarding experience for all involved. 

What we learned

We learned frontend development is more frustrating that originally thought!

What's next for Pear

Setting up a secure payment system, and getting contractors involved. We need to make Pear the easiest way for communities to make their causes directly accessible to funders across the world. 
",,http://pearapp.scalingo.io/#/,,"Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","node.js, javascript, angular.js","University College School, University of Edinburgh","",JCobbles,Jacob,Moss,parallaxparadox@gmail.com,"",1,joelguo,Joel,Guo,jguo48@gmail.com
BioScan,http://hackupc2017w.devpost.com/submissions/68861-bioscan,"Inspiration

We wanted to help people (and ourselves) indentify the healthy/unhealthy products in a very simple and easy way.

What it does

It scans the barcodes of the products and tells you if a product is healthy or not, highlighting the unhealthy ingredients.

How we built it

Using Android Studio to create the mobile app, MySQL to create the database with the products information and using Scrapy (python) to crawl information of the products from the web.

Challenges we ran into

We didn't have experience neither in Android nor in Python as in our career (Telecommunications Engineering in UPC) we have only used Java, so everything has been a challenge for us.

Accomplishments that we're proud of

We are proud that even with the short amout of time we have managed to launch a quite good-looking application, that it does what it has to do well and that the web-scrapping section is already gathering images, barcodes and nutritional information for us.

What we learned

In one hand, none of us had any previous experience with Android developement nor web scrapping, so we have had to search information about every line we have typed. At the beggining it was hard, but at the end we felt way more comfortable, so we are pretty satisfied with the experience.

What's next for BioScan

We have the intention to mantain it, and with some help from web-scrapping and maybe some external help from a nutritionist, to be able to publish it one day and make it available for everyone.
",https://www.youtube.com/watch?v=yPwl5MlK1UM,https://github.com/Arnauec/BioScan,,"","android, android-studio, java, python, scrapy",Universitat Politècnica de Catalunya,"",arnauec,Arnau,Estebanell,arnauec@gmail.com,"",1,pauvbb,Pau,Vidal Bordoy,quinvols@gmail.com
Tagit,http://hackupc2017w.devpost.com/submissions/68862-tagit,"Inspiration

We wanted to be able to comment on every webpage.

What it does

It gives you the freedom to post a comment on any webpage.

How we built it

Using HTML5+CSS and JS, backed up with firebase.

Challenges we ran into

We had a hard time trying to build anything from scratch, but in the end the most difficult part was to adapt our code to Google's extensions requirments.

Accomplishments that we're proud of

It  works!

What we learned

A lot, ranging from tech knowledge to how to organise as a team.

What's next for Tagit

We have a lot of possibilites!
",,https://github.com/joansalto/annotetis,,"","firebase, javascript, css, html",FIB UPC,"",Adri96,Adrià,Munuera,adriamunuera@me.com,"",2,pezmosca,Toni,"",toniarellano96@gmail.com,joansalto,joansalto,"",joansalto14@gmail.com
EnterwaveMe,http://hackupc2017w.devpost.com/submissions/68863-enterwaveme,"Inspiration

Random internet memes

What it does

Et mostra un video de youtube de la mateixa durada que el temps que poses al micro.

How we built it

We used some hardware to detect the microwave set time. This hardware connects over wifi to a server to send this information. The server connects to the YouTube Data api to look for the video of the correct lenght. After that, it loads the list of registered clients and sends a notification using Firebase.

Challenges we ran into

Being able to send notifications from the edison (you must connect through a valid ssd certificate).
Getting the videos of the correct lenght.
Figuring out how to read the time from the microwave.
Working with edison's tendency to fail.

Accomplishments that we're proud of

It just works.

What we learned

Working with notifications, linking hardware and software, using new backend paradingms

What's next for EnterwaveMe

Making it easy to connect serveral microwaves and clients through the same backend.
",,https://enterwaveme.scalingo.io/,,"Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","intel-edison, node.js, javascript, firebase, html5, css3, arduino, scalingo",UPC,Intel Edison,pepjo,Pep,Rodeja,pepjo26@gmail.com,"",1,seraco,Sebastià,Ramon,sebastiaramon_1994@hotmail.com
DEMM - Dynamic Emergency Management Mapping,http://hackupc2017w.devpost.com/submissions/68864-demm-dynamic-emergency-management-mapping,"Inspiration

The opportunity to be able to contribute to our society by creating a tool with life saving capabilities.

What it does

It's a platform meant to be integrated into smartphones which would allow for rapid response in large emergency situations. This platform automatically detects people in need and volunteers willing to help and distributes the workforce as efficiently as possible.

How we built it

We built a server using nodejs which communicates to both an Android App and a Web-App. These two platforms work together to allow for real time monitoring of the situation as well as distributing and guiding people through the chaos.

Challenges we ran into

Non of the members of the team had experience with Android development. The algorithms to calculate the best routes for the volunteers were complicated and at times frustrating.

Accomplishments that we're proud of

We've been able to make a simple proof of concept to give a hint of what our idea might one day become.

What we learned

We learnt team work experience, basics of Android development, web design ...

What's next for DEMM - Dynamic Emergency Management Mapping

We hope to be able to keep working on this great project, specially if we get recognition and acknowledgement from the university.
",,https://github.com/mariavila/DEMM,,"EVERIS Challenge: Help people with AI, Esri Challenge: Improve Blablarcar search algorithm, Between Challenge:  SmartLocation to save lives, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","html5, javascript, jquery, java, android-studio, atom, npm, github",UPC,"",davidcnns,David,Cañones,davidcnns@gmail.com,"",3,MariaVila,Maria,Vila,mariava.1213@gmail.com,estevetara,Esteve,Tarrago,ets1995@hotmail.com,marcmillet,marc,millet,marc170995@gmail.com
RGBArchitect,http://hackupc2017w.devpost.com/submissions/68865-rgbarchitect,"HackUPC 2017 Winter - Computer Vision, Unity, Game Dev

About Us

We are a pair of math students at UPC who are in love with coding. Last HackUPC was our first and it was A BLAST, so we were more than happy to have, again, the chance to do what we love while drinking some energy drinks. 
About the idea: it all started with us buying an old Kinect 360 and wanting to do something with Computer Vision (just because). The thing is that that version of kinect is very old (cheap, though) and we just didn't find much of anything compatible with it during the first 5-6h... but still, we found a way! We love videogames too, and were a tad familiar with Unity... 
The challenges we were presented by the sponsors didn't appeal much to us this time around (you can't have it all) except the one that said ""build something nice"". Well, we had a ton of fun and learned a million things too.
Here's basically the README.txt of our project (enjoy!):

RGB Architect

RGB Architect is a simple 2D platformer game with the purpose of making level design and prototyping in a 2D environment a very easy, dynamic and fun task.

This environment is meant as a tool rather than as an entertaining piece itself as it's simplicity shows. Also please bear in mind that this has been the result of 36h hours of rush coding at a hackathon by two math degree students when you think about the (multiple) flaws the game still has.

So, what does RGBArch do? Well it makes level design, prototyping and testing INSANELY fast and easy. How? In it's current form this project imports a fully playable level in mere seconds from a small png image. It does so by identifying the RGB values (hence the name :P) of the pixels and matching them with a game object in the Unity project. At runtime, it spawns the correct prefabs (units, terrain, sprites and game objects in general) at the right coordinates making the ""level map"" playable in seconds.

Currently we use 8 different colors for 8 different prefabs, the colors being as separated as possible from each other (consider RGB colors as 3D vectors with a byte worth of info in each coordinate) in the RGB space. Those are: 


Black   [0,0,0]               simple terrain prefab
Red     [255,0,0]         simple enemy mob (no AI yet, it's a snail)
Green   [0,255,0]         player spawn
Blue    [0,0,255]         object boxes (currently decoration)
Yellow      [255,255,0]           coin
Magenta  [255,0,255]          goal/end of level
Cyan    [0,255,255]           coin (placeholder)
White   [255,255,255] empty space/background


The Unity LevelLoader class will interpret any png image following the above criteria and start a new game, making room for some awesome trickery (see the imported Skyline of Barcelona, Minnessota or NY ploted onto the Game View or toy with images that were not intended as level maps like the RNG pack). Also, if you're into that kind of thing you can choose to design your levels pixel by pixel using any image edition software such as Ps or GIMP (or MSPaint!) and go MUCH deeper into level generation and design by making your own prefabs or using slightly different values of RGB for a much more wide variety of prefabs (for instance, use pure Red[255,0,0] for the base version of an enemy AI and [255,0,x] for as many slightly different variations of it!).

Moving ahead we've already thought on giving different options for AIs (both for Player and mobs), completing the basic game with things like health bars, scorekeeping(customizable?) or support for more than one Player at a time in the same level. Also fixing some issues (like some terribad algorithm efficiency hurting performance here and there).

On a side note, we just realized this is a pretty powerful tool for rendering really cool pixel art (you can also play a game on top of your favourite pieces!).

Finally, HUGE shoutouts to quill18 for his tutorials and being the source of some of the free assets and code snippets we used when starting with this.

Image Recognition

The reason we want our colors as different as possible is so the second part of this project works better. You'll notice a folder named ImageDetection containing a bunch of python scripts and input/output folders. The ultimate goal of this project is to create a Computer Vision algorithm that takes pictures of handwritten sketches for levels and outputs a readable png image that our Unity interpreter can instantly make into a playable 2D Scene! (You know, it's an architect, he looks at sketches then build things, get it? ... sigh)

Current version of the CV algorithm assumes a bunch of limitations and restrictions from the pictures it takes, such as knowing from beforehand the width and height of the target png image and very low to no inclination of the pictures. Both of those restrictions can very easily be taken out, we just didn't have the time for them at the hackathon.

Looking at future versions, we could use some reference points on the corners (like in QR codes) of the sketches so we can try making it much more flexible and fix things like paper bending and weird camera angles. Code needs some cleansing and whatsoever (you know by now).

And that's it! Thanks for going all the way to the bottom of this document, hope you enjoy RBG Architect as much as we did building it!

Raquel L. Pérez Arnal & Dídac Fernández Cadenas
",,https://github.com/VashMKS/RGBArchitect,,"EVERIS Challenge: Help people with AI, Best hack by Bloomberg","c#, asp.net, python",Universitat Politécnica de Catalunya,"",didac,Dídac,Fernández,didac.fernandez.cadenas@gmail.com,"",1,RaquelLeandra,RaquelLeandra,Pérez Arnal,raquelpa93@gmail.com
Smart Eco Shower,http://hackupc2017w.devpost.com/submissions/68866-smart-eco-shower,"Inspiration

nothomf What it does

How I built it

Challenges I ran into

Accomplishments that I'm proud of

What I learned

What's next for Smart Eco Shower
",,,,"","c, onewire, dallas, servo, softwareserial",Etaeib fib,"",tranksword,Carlos,Alvaro,tranksword@hotmail.com,"",0
emergencymap.tech,http://hackupc2017w.devpost.com/submissions/68867-emergencymap-tech,"Inspiration

Between Challenge

What it does

It displays all the geo-localizad emergency signals users have sent via their Android phones, in a web front-end. You can even choose to see all the distress signals from a particular date in time.

How we built it

Android Studio for the App, and Javascript, HTML, PHP and CSS for the web, deployed in AWS using a dot tech domain. 

Challenges we ran into

Backend issues.

Accomplishments that we're proud of

It looks ok

What we learned

Web dev, and networks

What's next for emergencymap.tech

Improve it as a whole
",,http://emergencymap.tech,,Between Challenge:  SmartLocation to save lives,"android-studio, amazon-web-services, javascript, php, processing, html5, css, java",UPC,"",davidss97,David,Sánchez,david.sanchez.soles@est.fib.upc.edu,"",2,andreuinyu,Andreu,Punsola,andreu4ps@gmail.com,andreup,Andreu,Pavia,andpavpar@gmail.com
uCode Cluster,http://hackupc2017w.devpost.com/submissions/68868-ucode-cluster,"Inspiration

We have made the Between challenge:
"" Smartlocation to save lives
Virtually every person has a smartphone with GPS technology which can be a very useful tool to save lives in emergency situations. We  want  to  see  what  comes  to  mind  to  the  hack-teams  using  the  geolocation  of smartphones,to save lives in emergency situations. We could have a mobile application with which the victim of a catastrophe can activate its location so that emergency services can track where most people are, and see the state they are: safe>green, red>at risk. In this way, they can be directed to the most affected areas by analyzing all these data from a web-control panel. We would like that between victim and emergency service a communication could be established through a live chat service. And for us, it’s also important have a live geolocation service.Teams, it’s up to you! You can guide the project as you want. In the example, we used a natural disaster, but you can develop it for many other cases where geolocation helps potentially save lives. It is important that all your proposals can work well in a busy peak due to a major emergency. We would be interested to see the use of Android and/or iOS, WebApps, backend, JavaScript, etc.""

What it does

We use the DBSCAN algorithm to make clusters from the alerts sent by the clients. This allow us to put in the same groups the alerts that comes from the same cause. With the cluster size, we can know the magnitude of a dissaster alert.

Furthermore, we developed an Android application that monitors the ubication of the user every 5 seconds. It sends the location to the server with its state (safe or at risk). This application run in the background as a service.

As a admin tool , we have developed a simplre web app that shows the location of all users using the OpenStreetMap base.

How we built it

Using Android (Mobile app)

JavaScript (FrontEnd)

Python (BackEnd)

Challenges we ran into

Join all the technologies involved in this project.

Accomplishments that we're proud of

Join all the technologies involved in this project.

What we learned

Clustering and Python

What's next for uCode Cluster

Make it a commercial tool.
",,https://github.com/adrigaarcia/HackUPC2017W,,Between Challenge:  SmartLocation to save lives,"python, dbscan, clustering, javascript, android, openstreetmap, leaflet.js, rest, json, jquery, sklearn, ajax","Universidad de Zaragoza, Universidad Politécnica de Madrid","",jorgecancerps,Jorge,Cáncer Gil,jorgecancerps@gmail.com,"",3,JorgeCoke,Jorge,ML,571735@unizar.es,MarcosCM,Marcos Canales,Mayo,marketes94@gmail.com,adrigaarcia,Adrián,García,adrian891.ag@hotmail.com
TaskBot,http://hackupc2017w.devpost.com/submissions/68869-taskbot,"TaskBot - HackUPC Winter 2017

TaskBot is a Telegram Task Manager Chatbot that keeps a list with your stuff.

Just tell him what do you have to do and he will keep track of it in a gracefully way.

His reaction and the way he talks depend on how you talk with him!

Prove it:


Use Telegram -no matter the device you are. 
Search for @thetaskbot
Have fun!
It is done with help form the Everis API.
More information -such as all the commands TaskBot know- can be found at link

",,http://www.taskbot.tech,,"EVERIS Challenge: Help people with AI, Best .tech domain","python, project-tango",UPF,"",ignasi,Ignasi,Oliver,ignasioliverf@gmail.com,"",0
BIENE,http://hackupc2017w.devpost.com/submissions/68870-biene,"Inspiration

http://biene.tech

BIENE

What it does

IT BIENES THE HELL OUT OF BIENE. But srsly it is a flappy biene game.

How we built it

WITH BIENE

Challenges we ran into

Finding out what we are hacking on.

Accomplishments that I'm proud of

NONE

What I learned

What BIENE is. But it does not matter because it is about YOU. What Biene is to YOU.

What's next for Biene

You don't wanna know.
",,http://github.com/pecoraa/Biene,,"#HackHarassment, Best .tech domain, Amazon Web Services - Best Use of AWS","lua, love2d, biene, b13n3, b!ene",University of Edinburgh,"",pecoraa,Elena,Lapinskaite,elena.l@hotmail.lt,"",1,qaisjp,Qais,Patankar,qaisjp@gmail.com
Accidentally Safe,http://hackupc2017w.devpost.com/submissions/68871-accidentally-safe,"Inspiration

Police forces in the UK and the US has been predicting crime hotspots using machine learning on historic data. We wanted to help other emergency services such as ambulances and hospital A & E prepare in advance using the same techniques. This would enable them to save more lives.

What it does

We used historical accident data about the UK for 10 years to learn about the location, road conditions, weather conditions, speed limits, time of the day / lighting conditions, age and gender of the drive and how they affect the probability of a driver to be involved in an accident.

Our software does two things:


When someone departs for a journey, we plot their journey on the map and predict the accident prone hot spots on their route and warn them in advance to drive carefully as they approach that area. 
We display a heat map for ambulance drivers and hospitals of how new accidents will occur in new areas as the time of the day (lighting, weather & traffic conditions) change. This enables them to plan a better route & patient pipe line for their ambulances.


How we built it


For the UI, we built it using the Google Maps API with heat map visualisation along with node Js / express / mysql for the historic data api. Use their routing API 
Machine learning API: Flask with R backend (invoked as a sub-process)


Challenges we ran into


Lots of minor issues with our machine learning implementation which include:


Imbalanced classes
Feature select was an issue due to the huge dataset we used (2M records)
Location data involving longitude and latitude was complex to handle

Breaking NodeJS (out of memory) when trying to import and sanitise the huge dataset.
Performance related plotting the data on UI due to the huge dataset.


Accomplishments that we're proud of

Initially we were frustrated with the model performance (Accuracy). With after spending more time on this we improved this score. Also after cross referencing some research papers we realised that we were not too far off from state of art accuracy. 

What we learned


The challenges of feature selection on datasets so large, its hard to even load it up.
Handle geolocation / spatial data
Optimising web UIs for displaying large datasets.


What's next for AccidentallySafer


Make the platform open source to allow for hospitals and ambulance drivers predict locations of potential accidents. Advanced preparation for casualties will help to reduce patient's waiting times at A & E.
Push this service to Sat navs like Google map and TomTom. When drivers are about to drive through an accident prone area, they'll be warned in advanced to take extra care just like speed camera alerts. 

",,,,"EVERIS Challenge: Help people with AI, Esri Challenge: Improve Blablarcar search algorithm, FIB API Challenge, Best .tech domain, Between Challenge:  SmartLocation to save lives, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg, Amazon Web Services - Best Use of AWS","javascript, node.js, npm, html5, css3, google-geocoding, map, google-maps, heatmap, python, sklearn, machine-learning, amazon-web-services, scipy, numpy, r, particle, jquery, flask, express.js, mysql","Warwick, Warwick, UPC","",arghasarkar,Argha,Sarkar,argha.sarkar1994@gmail.com,"",2,krishnakalyan,krishna,kalyan,krishnakalyan3@gmail.com,webbjamie93,Jamie,Webb,webbjamie93@gmail.com
Good=win,http://hackupc2017w.devpost.com/submissions/68872-good-win,"What it is

Web-based application aimed at promoting charity, volunteering and other good deeds with the help of already existing social networks.

What it does

After the user links their accounts in social networks (as many as they want),  the application starts scraping automatically their public posts and calculates each one’s GoodScore. GoodScore is a measure of how much one contributes to the society in various ways, from charity to healthy life style promotion.
In “rating” section one can look on different rankings and data visualization, for example: city ranking, maps with “most kind regions” etc.
We hope that way it will encourage active social network users to participate in various activities and write posts about them. 

Technology we used

Web: Django Python, React.js, jQuery, Scalingo 

Database: Postgres

Data Mining and Authentification: Instagram API, Facebook API and Twitter API

Data visualization: Esri ArcGIs API, Conva.js

Frontend: React.js, Bootstrap, Bottle

Data Analysis: Google keyword extraction KEA algorithm, Everis API, Pytesseract, Kairos.

What we have learnt

Overall the problem of text parsing is pretty complicated and requires open-ended research, great insight in machine learning and data analysis. During the hackathon we tried a lot of different approaches and applied ready-to-use solutions, however, a lot work is to be done in future.
We also learned a lot of frontend hacks as we focused on the visual side of the application. Using proposed APIs from the sponsors was quite a challenge too, but thanks to the advisers from the stuff we used them on the full scale.
We are grateful for the experience and hope you like our demo.

Accomplishments:

Our frontend team accomplished a lot of challenges. Considering the fact that they are not professional web-developers and usually are working in other areas, that is a huge step for them.

Future

There is still a long way to go: optimize text and image processing algorithms, create mobile app, scale for more users and add some features. We believe in our idea and look forward to develop it for the market.
",https://youtu.be/kBts1mNG3BQ,http://good-win.scalingo.io/,,"EVERIS Challenge: Help people with AI, Esri Challenge: Improve Blablarcar search algorithm, #HackHarassment, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","react.js, jquery, scalingo-database:-postgres-data-mining-and-authentification:-instagram-api, facebook-api-and-twitter-api-data-visualization:-esri-arcgis-api, conva.js-frontend:-react.js, bootstrap, bottle-data-analysis:-google-keyword-extraction-kea-algorithm, everis-api, pytesseract, django, python, postgresql, scalingo, instagram-api, conva.js, facebook, twitter, esri-arcgis-api, bottle, kea, google-keyword-extraction-kea-algorithm, git",Moscow Institute of Physics and Technology,"",ValeriyaSinevich,Valeriya,Sinevich,valeriya.sinevich@phystech.edu,"",3,SecurityQQ,Alexander,Malyshev,alexmsecurity@gmail.com,kholopov96,Igor,Kholopov,kholopov96@gmail.com,zerts,Andrey,Zertsalov,zertsalov96@yandex.ru
TeamBuilder,http://hackupc2017w.devpost.com/submissions/68873-teambuilder,"When we arrive this Friday at our first Hackathon, HackUPC Winter 2017, we were two couples of hackers and wanted to make a team to be four, so 

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for TeamBuilder
",,https://github.com/laurasole/TeamBuilder.git,,"FIB API Challenge, #HackHarassment","python, php, xampp, html, txt",UPC,"",laura_solebcn,Laura,Solé,laura_solebcn@hotmail.com,"",1,prenauroser,Pol,Renau Larrodé,prenau.roser@gmail.com
Hooman,http://hackupc2017w.devpost.com/submissions/68874-hooman,"We tried to do what signatureit ask, but they disapear so did not help with any doubt (we had some about their API) and they did not answer slack neither. 
Signatureit wanted to connect their API with a web site like Change.org 
",,https://hooman.scalingo.io,,Signaturit Challenge: Best use of Signaturit API,"api, javascript, node.js, express.js, jade, semantic-iu, mongodb, mongoose",UPC,"",marb403,Mar,Badias,marbadias@hotmail.com,"",2,NuriaBruch934,Núria,Bruch,nuria.bruch.gravi@gmail.com,egasato,Esaú,García Sánchez-Torija,egasato@gmail.com
BLAWORM,http://hackupc2017w.devpost.com/submissions/68875-blaworm,"Inspiration

Our motivation is related to our desire to learn and meet people from other countries and have good moments

What it does

Our project is a platform game in 2.5D with different game modes, the most developed are the infinite mode and the level selector.
Our project has a store of its own in which from a system of collecting coins you can buy new appearances of the main character, colors to change during the game and improvements.
Dynamic menus and camera movements that will take you into a world of impressive mazes.

How we built it

Our project was divided into sectors and each member of the group was commissioned to make a section of the project, one ordered the infinite mode and the character, another of the menus and some levels; And the other member performed levels and creative part.

Challenges we ran into

One of the biggest challenges that this game has, is the infinite mode and the creation of this, since we have to take into account the progressive level destruction for not over loading memory and device ram.
Another point of difficulty to take into account is the creation of the character and the movement of this post that has to follow some parameters and receive information the input devices of each device in which it is executed

Accomplishments that we're proud of

We are proud to have made the infinite mode given that it has been one of the greatest challenges

What we learned.

What's next for BLAWORM

The future of this project is the improvement of this and the optimization given that this project can be greatly improved in many aspects.
",,,,"",unity,polytechnic university of catalonia,"",guille095,Guillem,Avecilla,guillem.ag95@gmail.com,"",2,JavierPerez,Javier,Perez,javierperezies@gmail.com,carlalara97,Carla,Lara,carla.lara.compte@gmail.com
Code Dungeon,http://hackupc2017w.devpost.com/submissions/68876-code-dungeon,"Inspiration

Get more people involved with coding in an engaging and fun manner!

What it does

Engages users by allowing them to write basic commands, move around the map and fight a boss, whilst learning fundamental programming concepts.

How we built it

We built Code Dungeon entirely in JavaScript so that it could be enjoyed via the browser.

Challenges we ran into

Time

Accomplishments that we're proud of

Making a working and fun game that we hope people will enjoy

What we learned

36 hours isn't a lot of time

What's next for Code Dungeon

We want to help educate people about coding with our awesome game!
",,http://46.101.18.151:8261/,,"Best .tech domain, Best hack by Bloomberg","javascript, create.js, easeljs, node.js, html, css","University of Birmingham x2, Oxford University","",connorcartwright,Connor,Cartwright,connorcart@gmail.com,"",2,kjav,kjav,,sam.rr.lee@gmail.com,dnadan2,Dan,Blessett-williams,_dan_@live.com
hackupc-image_classifier,http://hackupc2017w.devpost.com/submissions/68877-hackupc-image_classifier,"Inspiration

--

What it does

--

How I built it

--

Challenges I ran into

--

Accomplishments that I'm proud of

--

What I learned

--

What's next for hackupc-image_classifier

--
",,https://github.com/Urbistondo/hackupc-image_classifier,,"","javascript, css, python, html, typescript",Imperial College London,"",Iandrei96,Iandrei96,"",ii515@ic.ac.uk,"",0
Refugees_rescue,http://hackupc2017w.devpost.com/submissions/69149-refugees_rescue,"Refugees_rescue

This is web application for which would help refugees to connect the outer world and get support for their physical as well as mental need. :) 
",,https://github.com/suhaas-livcd/Refugees_rescue,,Signaturit Challenge: Best use of Signaturit API,"html, css, javascript, java, jquery, node.js, etc",Karunya University,"",suhaas95,Suhaas Srinivas,Gandham,suhaas95@gmail.com,"",0
SchedulerBot,http://hackupc2017w.devpost.com/submissions/69150-schedulerbot,"Inspiration

Making plans with one or more friends is always a long discussion, by asking the schedule back and forth and trying to coordinate calendars. Our project improves this part of life by automatizing the process without having to leave the chat conversation!

What it does

The user calls the bot and specifies an event: Maximum start date, maximum end date and duration. The bot then is able to access the personal calendars from all the users and check where the free time slots are. 

How I built it

We use Python, Flask and of course, Telegram

Challenges I ran into

Using flask - which is a blocking process - at the same time the bot is in polling() state. We had to check if other projects accomplished this mission

Accomplishments that I'm proud of

Understanding better the usage of Flask, Telegram and others.

What I learned

We learned to program with the google API, as well as the Telegram API. It was the first time we created a Telegram API So it was an exciting challenge

What's next for SchedulerBot

Integrate doodle-like options which provides another kind of interface for the people who will use our app
",,https://github.com/aleixpb2/TelegramSchedulerBot.git,,"","python, telegram, flask",UPC-BarcelonaTECH,"",laiaaa0,laia,freixas,laiafreixas9@gmail.com,Universitat Politecnica de Catalunya,2,jmigual,Joan,Marcè,j.marce.igual@gmail.com,aleixpb2,Aleix,París,aleixpb2@gmail.com
SafeWhistle,http://hackupc2017w.devpost.com/submissions/69151-safewhistle,"Inspiration

We we're motivated by the Between challenge of using location technologies to save lives.

What it does

SafeWhistle lets you notify loved ones when you are alone and might need support. It sends SMSs to them with your location.

How I built it

We built it with the standard android stack, plus a backend in ruby using firebase. We use AWS or Twilio to send sms, depending on the latency we find at that moment, as these messages are critical.

Challenges I ran into

We wanted to have a hardware button which we built using an arduino. It would connect over bluetooth which gave us more headaches than anything else. Finally we gave up the hardware part to perfect the software, as we had been stuck trying to read from the hardware button for over a day.

Accomplishments that I'm proud of

Getting the bluetooth module to talk to the arduino and to the android phone was a major challenge.

What I learned

We've acquired some collaboration skills and learned that hardware projects are really challenging.

What's next for SafeWhistle

Talk with emergency services to be able to call them through SMS.
",,https://github.com/HackUPC-ReggaetonLento/AndroidApp,,"Between Challenge:  SmartLocation to save lives, Scalingo Challenge: The coolest Hack Hosted on Scalingo, Best hack by Bloomberg","ruby, firebase, java, arduino, twilio, scalingo, android-studio",Universidad Autónoma de Madrid,"",Lletfrix,Rafa,Sánchez Sánchez,lletfrix@gmail.com,Universidad Autonoma de Madrid,3,Javierd98,Javier,Delgado,javierd299@gmail.com,knifecake,Elias,Hernandis,eliashernandis@gmail.com,SavageLaoch,Juan,Velascoi,juveiz2931@gmail.com
Smart Charger,http://hackupc2017w.devpost.com/submissions/69155-smart-charger,"Inspiration

There are several reasons:


A friend that studies about renewable energies told us that there is a problem with the difference in loads in the network because there are peaks in demand and this is not good.  Connecting devices to the network when anybody is using it would help with this issue in order to flatten the demand throughout the day.
The rise of the price of electricity in the last months made us realize that it would be a very good idea if you could charge your devices when the price of the kilowatt/hour is low.


What it does

The project has three components:


The server (AWS) performs several tasks: it calculates daily the prediction of the time series using R with data downloaded from a public database.  It also manages the connection of the module and the app.  It processes the data coming from the app and sends commands to the module to switch the plug on or off.  It uses an algorithm that minimizes the expenses to charge the device based on the predicted cost of the kilowatt/hour. 
The intelligent plug has a wifi module that connects to the server and receives commands to switch on/off the plug.
An app that allow the user to control de plug and also program the charging schedule* of the device connected to the plug.


How we built it


We welded all the components in a board and programmed the module (ESP8266) with C.  It runs a simple tcp client that is always connected to the cloud (server).
The main script in the server (Python) will manage the connections and also execute a shell script and an r script that will download the data from the past days and calculate using seasonal ARIMA time series models.
The application is programmed in Android Studio.


Challenges we ran into


Testing the system in a different time scale so we could check that everything works.
Generate a working prediction algorithm in a language and be force to rewrite it using another language (the server couldn't run it).
Lear how to use amazon web services (we had problems with opening the connection to TCP traffic).
Learning to program android interface.
Problems with the welding of the components.


Accomplishments that we're proud of


Finishing everything in time, we managed to finish everything we wanted to do.
Being able to connect to the AWS server and also run there the predicting algorithms (we knew how to do it in Matlab but not in R).


What we learned


Amazon web services
Teamwork
Android development
Use relays (electronics) 


What's next for Smart Charger


 Improve the algorithms in the cloud, the interface of the application and the protocol between app and server.


Demo

Bad quality video... Sorry
Demo in Spanish: https://www.youtube.com/watch?v=T497B9dKnog
Demo in English https://www.youtube.com/watch?v=FsTcBvK0N20
",,https://github.com/Tuhamster/HackUPC.git,,Amazon Web Services - Best Use of AWS,"python, r, android, java, c, bash, embedded, electronics, matlab, amazon-web-services, esp8266",UPC,"",HEIMDAL13,Oriol,Vila,vlcl_ori_13@hotmail.com,"",2,tekelel,Martí,Cervià,marti.cervia@gmail.com,JavierGonz,Javier,Gonzalez,javigonzpriet@gmail.com
